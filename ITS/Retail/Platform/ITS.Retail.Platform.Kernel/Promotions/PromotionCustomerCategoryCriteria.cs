using ITS.Retail.Platform.Enumerations;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using ITS.Retail.Platform.Kernel;

namespace ITS.Retail.Platform.Promotions
{
    /// <summary>
    /// Promotion criteria for the document's customer's category.
    /// </summary>
    public class PromotionCustomerCategoryCriteria : IPromotionCriteria
    {
        /// <summary>
        /// The category to filter with.
        /// </summary>
        DenormalizedCategory DenormalizedCustomerCategory { get; set; }

        public PromotionCustomerCategoryCriteria(DenormalizedCategory denormalizedCustomerCategory)
        {
            this.DenormalizedCustomerCategory = denormalizedCustomerCategory;
        }

        /// <summary>
        /// Returns true if the document's customer category is in the DenormalizedCustomerCategory or its children.
        /// </summary>
        /// <param name="denormalizedDocument"></param>
        /// <param name="priority"></param>
        /// <returns></returns>
        public bool MeetCriteria(List<DenormalizedDocumentDataLine> denormalizedDocument, ePromotionExecutionPriority priority)
        {
            List<DenormalizedDocumentDataLine> result = new List<DenormalizedDocumentDataLine>();

            if (this.DenormalizedCustomerCategory.CategoryID != Guid.Empty) 
            {
                result.AddRange(denormalizedDocument.Where(x => x.CustomerCategories.Contains(this.DenormalizedCustomerCategory.CategoryID) || x.CustomerCategories.Intersect(this.DenormalizedCustomerCategory.AllChildCategoryIDs).Count() > 0));                
            }
            else
            {
                throw new Exception("Customer Category cannot be empty");
            }

            return result.Count > 0;
        }


        /// <summary>
        /// Gets a list of constrains that are generated by applying this criteria.
        /// </summary>
        /// <param name="denormalizedDocument"></param>
        /// <param name="priority"></param>
        /// <returns></returns>
        public List<IPromotionConstrain> GetConstrains(List<DenormalizedDocumentDataLine> denormalizedDocument,ePromotionExecutionPriority priority)
        {
            ////no constrains
            return new List<IPromotionConstrain>();
        }

    }
}
