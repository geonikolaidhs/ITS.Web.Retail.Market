//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
// 
#pragma warning disable 1591

namespace ITS.Retail.MigrationTool.RetailService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RetailServiceSoap", Namespace="https://weborders.masoutis.gr/")]
    public partial class RetailService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSeriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemWithBarcodeCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetItemWithBarcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPriceCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDetailCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PostDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalUpdatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserStoreAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStoresOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAppSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CleanFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalUpdatesLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckValidStorePriceCatalogPairOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentHeadersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentHeadersXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentHeadersXMLWithFiltersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoesExistsAndIsActiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInactiveObjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreControllerGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOwnerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreControllerSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStoreOfStoreControllerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDefaultCustomerOfStoreControllerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileFilelistOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RetailService() {
            this.Url = global::ITS.Retail.MigrationTool.Properties.Settings.Default.MigrationTool_RetailService_RetailService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event PostDataCompletedEventHandler PostDataCompleted;
        
        /// <remarks/>
        public event GetSeriesCompletedEventHandler GetSeriesCompleted;
        
        /// <remarks/>
        public event GetDocumentStatusCompletedEventHandler GetDocumentStatusCompleted;
        
        /// <remarks/>
        public event GetItemCompletedEventHandler GetItemCompleted;
        
        /// <remarks/>
        public event GetItemWithBarcodeCustomerCompletedEventHandler GetItemWithBarcodeCustomerCompleted;
        
        /// <remarks/>
        public event GetItemWithBarcodeCompletedEventHandler GetItemWithBarcodeCompleted;
        
        /// <remarks/>
        public event GetPriceCompletedEventHandler GetPriceCompleted;
        
        /// <remarks/>
        public event GetPriceCustomerCompletedEventHandler GetPriceCustomerCompleted;
        
        /// <remarks/>
        public event GetDocumentDetailCustomerCompletedEventHandler GetDocumentDetailCustomerCompleted;
        
        /// <remarks/>
        public event GetDocumentDetailCompletedEventHandler GetDocumentDetailCompleted;
        
        /// <remarks/>
        public event ValidateOrderCompletedEventHandler ValidateOrderCompleted;
        
        /// <remarks/>
        public event PostDocumentCompletedEventHandler PostDocumentCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetUserTypeCompletedEventHandler GetUserTypeCompleted;
        
        /// <remarks/>
        public event GetCustomersOfUserCompletedEventHandler GetCustomersOfUserCompleted;
        
        /// <remarks/>
        public event GetCustomersCompletedEventHandler GetCustomersCompleted;
        
        /// <remarks/>
        public event GetTotalUpdatesCompletedEventHandler GetTotalUpdatesCompleted;
        
        /// <remarks/>
        public event getUserStoreAccessCompletedEventHandler getUserStoreAccessCompleted;
        
        /// <remarks/>
        public event getStoresCompletedEventHandler getStoresCompleted;
        
        /// <remarks/>
        public event getAppSettingsCompletedEventHandler getAppSettingsCompleted;
        
        /// <remarks/>
        public event CleanFileCompletedEventHandler CleanFileCompleted;
        
        /// <remarks/>
        public event GetTotalUpdatesLinkCompletedEventHandler GetTotalUpdatesLinkCompleted;
        
        /// <remarks/>
        public event CheckValidStorePriceCatalogPairCompletedEventHandler CheckValidStorePriceCatalogPairCompleted;
        
        /// <remarks/>
        public event GetDocumentHeadersCompletedEventHandler GetDocumentHeadersCompleted;
        
        /// <remarks/>
        public event GetDocumentHeadersXMLCompletedEventHandler GetDocumentHeadersXMLCompleted;
        
        /// <remarks/>
        public event GetDocumentHeadersXMLWithFiltersCompletedEventHandler GetDocumentHeadersXMLWithFiltersCompleted;
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        public event GetImagesLinkCompletedEventHandler GetImagesLinkCompleted;
        
        /// <remarks/>
        public event DoesExistsAndIsActiveCompletedEventHandler DoesExistsAndIsActiveCompleted;
        
        /// <remarks/>
        public event GetInactiveObjectsCompletedEventHandler GetInactiveObjectsCompleted;
        
        /// <remarks/>
        public event GetStoreControllerGuidCompletedEventHandler GetStoreControllerGuidCompleted;
        
        /// <remarks/>
        public event GetOwnerCompletedEventHandler GetOwnerCompleted;
        
        /// <remarks/>
        public event GetStoreControllerSettingsCompletedEventHandler GetStoreControllerSettingsCompleted;
        
        /// <remarks/>
        public event GetStoreOfStoreControllerCompletedEventHandler GetStoreOfStoreControllerCompleted;
        
        /// <remarks/>
        public event GetDefaultCustomerOfStoreControllerCompletedEventHandler GetDefaultCustomerOfStoreControllerCompleted;
        
        /// <remarks/>
        public event GetMobileFilelistCompletedEventHandler GetMobileFilelistCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/Login", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid Login(string username, string pass, int type) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        pass,
                        type});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string pass, int type) {
            this.LoginAsync(username, pass, type, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string pass, int type, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        pass,
                        type}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/PostData", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PostData(string typeName, string data, string device) {
            object[] results = this.Invoke("PostData", new object[] {
                        typeName,
                        data,
                        device});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PostDataAsync(string typeName, string data, string device) {
            this.PostDataAsync(typeName, data, device, null);
        }
        
        /// <remarks/>
        public void PostDataAsync(string typeName, string data, string device, object userState) {
            if ((this.PostDataOperationCompleted == null)) {
                this.PostDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostDataOperationCompleted);
            }
            this.InvokeAsync("PostData", new object[] {
                        typeName,
                        data,
                        device}, this.PostDataOperationCompleted, userState);
        }
        
        private void OnPostDataOperationCompleted(object arg) {
            if ((this.PostDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostDataCompleted(this, new PostDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetSeries", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSeries(string Userid, int mode) {
            object[] results = this.Invoke("GetSeries", new object[] {
                        Userid,
                        mode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSeriesAsync(string Userid, int mode) {
            this.GetSeriesAsync(Userid, mode, null);
        }
        
        /// <remarks/>
        public void GetSeriesAsync(string Userid, int mode, object userState) {
            if ((this.GetSeriesOperationCompleted == null)) {
                this.GetSeriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSeriesOperationCompleted);
            }
            this.InvokeAsync("GetSeries", new object[] {
                        Userid,
                        mode}, this.GetSeriesOperationCompleted, userState);
        }
        
        private void OnGetSeriesOperationCompleted(object arg) {
            if ((this.GetSeriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSeriesCompleted(this, new GetSeriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentStatus", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TDocumentStatus[] GetDocumentStatus() {
            object[] results = this.Invoke("GetDocumentStatus", new object[0]);
            return ((TDocumentStatus[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentStatusAsync() {
            this.GetDocumentStatusAsync(null);
        }
        
        /// <remarks/>
        public void GetDocumentStatusAsync(object userState) {
            if ((this.GetDocumentStatusOperationCompleted == null)) {
                this.GetDocumentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentStatusOperationCompleted);
            }
            this.InvokeAsync("GetDocumentStatus", new object[0], this.GetDocumentStatusOperationCompleted, userState);
        }
        
        private void OnGetDocumentStatusOperationCompleted(object arg) {
            if ((this.GetDocumentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentStatusCompleted(this, new GetDocumentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetItem", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItem(string Sfilter, string Sfields, string UserID) {
            object[] results = this.Invoke("GetItem", new object[] {
                        Sfilter,
                        Sfields,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemAsync(string Sfilter, string Sfields, string UserID) {
            this.GetItemAsync(Sfilter, Sfields, UserID, null);
        }
        
        /// <remarks/>
        public void GetItemAsync(string Sfilter, string Sfields, string UserID, object userState) {
            if ((this.GetItemOperationCompleted == null)) {
                this.GetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemOperationCompleted);
            }
            this.InvokeAsync("GetItem", new object[] {
                        Sfilter,
                        Sfields,
                        UserID}, this.GetItemOperationCompleted, userState);
        }
        
        private void OnGetItemOperationCompleted(object arg) {
            if ((this.GetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemCompleted(this, new GetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetItemWithBarcodeCustomer", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemWithBarcodeCustomer(string barcode, string Sfields, string CustomerID) {
            object[] results = this.Invoke("GetItemWithBarcodeCustomer", new object[] {
                        barcode,
                        Sfields,
                        CustomerID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemWithBarcodeCustomerAsync(string barcode, string Sfields, string CustomerID) {
            this.GetItemWithBarcodeCustomerAsync(barcode, Sfields, CustomerID, null);
        }
        
        /// <remarks/>
        public void GetItemWithBarcodeCustomerAsync(string barcode, string Sfields, string CustomerID, object userState) {
            if ((this.GetItemWithBarcodeCustomerOperationCompleted == null)) {
                this.GetItemWithBarcodeCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemWithBarcodeCustomerOperationCompleted);
            }
            this.InvokeAsync("GetItemWithBarcodeCustomer", new object[] {
                        barcode,
                        Sfields,
                        CustomerID}, this.GetItemWithBarcodeCustomerOperationCompleted, userState);
        }
        
        private void OnGetItemWithBarcodeCustomerOperationCompleted(object arg) {
            if ((this.GetItemWithBarcodeCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemWithBarcodeCustomerCompleted(this, new GetItemWithBarcodeCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetItemWithBarcode", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetItemWithBarcode(string barcode, string Sfields, string UserID) {
            object[] results = this.Invoke("GetItemWithBarcode", new object[] {
                        barcode,
                        Sfields,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetItemWithBarcodeAsync(string barcode, string Sfields, string UserID) {
            this.GetItemWithBarcodeAsync(barcode, Sfields, UserID, null);
        }
        
        /// <remarks/>
        public void GetItemWithBarcodeAsync(string barcode, string Sfields, string UserID, object userState) {
            if ((this.GetItemWithBarcodeOperationCompleted == null)) {
                this.GetItemWithBarcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetItemWithBarcodeOperationCompleted);
            }
            this.InvokeAsync("GetItemWithBarcode", new object[] {
                        barcode,
                        Sfields,
                        UserID}, this.GetItemWithBarcodeOperationCompleted, userState);
        }
        
        private void OnGetItemWithBarcodeOperationCompleted(object arg) {
            if ((this.GetItemWithBarcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetItemWithBarcodeCompleted(this, new GetItemWithBarcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetPrice", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPrice(string UserID, string ItemOid, string barcode) {
            object[] results = this.Invoke("GetPrice", new object[] {
                        UserID,
                        ItemOid,
                        barcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceAsync(string UserID, string ItemOid, string barcode) {
            this.GetPriceAsync(UserID, ItemOid, barcode, null);
        }
        
        /// <remarks/>
        public void GetPriceAsync(string UserID, string ItemOid, string barcode, object userState) {
            if ((this.GetPriceOperationCompleted == null)) {
                this.GetPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceOperationCompleted);
            }
            this.InvokeAsync("GetPrice", new object[] {
                        UserID,
                        ItemOid,
                        barcode}, this.GetPriceOperationCompleted, userState);
        }
        
        private void OnGetPriceOperationCompleted(object arg) {
            if ((this.GetPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceCompleted(this, new GetPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetPriceCustomer", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetPriceCustomer(string CustomerID, string ItemOid, string barcode) {
            object[] results = this.Invoke("GetPriceCustomer", new object[] {
                        CustomerID,
                        ItemOid,
                        barcode});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetPriceCustomerAsync(string CustomerID, string ItemOid, string barcode) {
            this.GetPriceCustomerAsync(CustomerID, ItemOid, barcode, null);
        }
        
        /// <remarks/>
        public void GetPriceCustomerAsync(string CustomerID, string ItemOid, string barcode, object userState) {
            if ((this.GetPriceCustomerOperationCompleted == null)) {
                this.GetPriceCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPriceCustomerOperationCompleted);
            }
            this.InvokeAsync("GetPriceCustomer", new object[] {
                        CustomerID,
                        ItemOid,
                        barcode}, this.GetPriceCustomerOperationCompleted, userState);
        }
        
        private void OnGetPriceCustomerOperationCompleted(object arg) {
            if ((this.GetPriceCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPriceCustomerCompleted(this, new GetPriceCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentDetailCustomer", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TransferedDocumentDetail[] GetDocumentDetailCustomer(string customerString, string barcode, double qty) {
            object[] results = this.Invoke("GetDocumentDetailCustomer", new object[] {
                        customerString,
                        barcode,
                        qty});
            return ((TransferedDocumentDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDetailCustomerAsync(string customerString, string barcode, double qty) {
            this.GetDocumentDetailCustomerAsync(customerString, barcode, qty, null);
        }
        
        /// <remarks/>
        public void GetDocumentDetailCustomerAsync(string customerString, string barcode, double qty, object userState) {
            if ((this.GetDocumentDetailCustomerOperationCompleted == null)) {
                this.GetDocumentDetailCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDetailCustomerOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDetailCustomer", new object[] {
                        customerString,
                        barcode,
                        qty}, this.GetDocumentDetailCustomerOperationCompleted, userState);
        }
        
        private void OnGetDocumentDetailCustomerOperationCompleted(object arg) {
            if ((this.GetDocumentDetailCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDetailCustomerCompleted(this, new GetDocumentDetailCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentDetail", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TransferedDocumentDetail[] GetDocumentDetail(string userid, string barcode, double qty) {
            object[] results = this.Invoke("GetDocumentDetail", new object[] {
                        userid,
                        barcode,
                        qty});
            return ((TransferedDocumentDetail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentDetailAsync(string userid, string barcode, double qty) {
            this.GetDocumentDetailAsync(userid, barcode, qty, null);
        }
        
        /// <remarks/>
        public void GetDocumentDetailAsync(string userid, string barcode, double qty, object userState) {
            if ((this.GetDocumentDetailOperationCompleted == null)) {
                this.GetDocumentDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentDetailOperationCompleted);
            }
            this.InvokeAsync("GetDocumentDetail", new object[] {
                        userid,
                        barcode,
                        qty}, this.GetDocumentDetailOperationCompleted, userState);
        }
        
        private void OnGetDocumentDetailOperationCompleted(object arg) {
            if ((this.GetDocumentDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentDetailCompleted(this, new GetDocumentDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/ValidateOrder", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TInvalidItem[] ValidateOrder(string data) {
            object[] results = this.Invoke("ValidateOrder", new object[] {
                        data});
            return ((TInvalidItem[])(results[0]));
        }
        
        /// <remarks/>
        public void ValidateOrderAsync(string data) {
            this.ValidateOrderAsync(data, null);
        }
        
        /// <remarks/>
        public void ValidateOrderAsync(string data, object userState) {
            if ((this.ValidateOrderOperationCompleted == null)) {
                this.ValidateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateOrderOperationCompleted);
            }
            this.InvokeAsync("ValidateOrder", new object[] {
                        data}, this.ValidateOrderOperationCompleted, userState);
        }
        
        private void OnValidateOrderOperationCompleted(object arg) {
            if ((this.ValidateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateOrderCompleted(this, new ValidateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/PostDocument", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PostDocument(string data) {
            object[] results = this.Invoke("PostDocument", new object[] {
                        data});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PostDocumentAsync(string data) {
            this.PostDocumentAsync(data, null);
        }
        
        /// <remarks/>
        public void PostDocumentAsync(string data, object userState) {
            if ((this.PostDocumentOperationCompleted == null)) {
                this.PostDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPostDocumentOperationCompleted);
            }
            this.InvokeAsync("PostDocument", new object[] {
                        data}, this.PostDocumentOperationCompleted, userState);
        }
        
        private void OnPostDocumentOperationCompleted(object arg) {
            if ((this.PostDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PostDocumentCompleted(this, new PostDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetVersion", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetUserType", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public UserType GetUserType(string userid) {
            object[] results = this.Invoke("GetUserType", new object[] {
                        userid});
            return ((UserType)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(string userid) {
            this.GetUserTypeAsync(userid, null);
        }
        
        /// <remarks/>
        public void GetUserTypeAsync(string userid, object userState) {
            if ((this.GetUserTypeOperationCompleted == null)) {
                this.GetUserTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserTypeOperationCompleted);
            }
            this.InvokeAsync("GetUserType", new object[] {
                        userid}, this.GetUserTypeOperationCompleted, userState);
        }
        
        private void OnGetUserTypeOperationCompleted(object arg) {
            if ((this.GetUserTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserTypeCompleted(this, new GetUserTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetCustomersOfUser", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TCustomer[] GetCustomersOfUser(string userid, long updatedOn) {
            object[] results = this.Invoke("GetCustomersOfUser", new object[] {
                        userid,
                        updatedOn});
            return ((TCustomer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersOfUserAsync(string userid, long updatedOn) {
            this.GetCustomersOfUserAsync(userid, updatedOn, null);
        }
        
        /// <remarks/>
        public void GetCustomersOfUserAsync(string userid, long updatedOn, object userState) {
            if ((this.GetCustomersOfUserOperationCompleted == null)) {
                this.GetCustomersOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersOfUserOperationCompleted);
            }
            this.InvokeAsync("GetCustomersOfUser", new object[] {
                        userid,
                        updatedOn}, this.GetCustomersOfUserOperationCompleted, userState);
        }
        
        private void OnGetCustomersOfUserOperationCompleted(object arg) {
            if ((this.GetCustomersOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersOfUserCompleted(this, new GetCustomersOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetCustomers", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TCustomer[] GetCustomers(long updatedOn, string userID) {
            object[] results = this.Invoke("GetCustomers", new object[] {
                        updatedOn,
                        userID});
            return ((TCustomer[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersAsync(long updatedOn, string userID) {
            this.GetCustomersAsync(updatedOn, userID, null);
        }
        
        /// <remarks/>
        public void GetCustomersAsync(long updatedOn, string userID, object userState) {
            if ((this.GetCustomersOperationCompleted == null)) {
                this.GetCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersOperationCompleted);
            }
            this.InvokeAsync("GetCustomers", new object[] {
                        updatedOn,
                        userID}, this.GetCustomersOperationCompleted, userState);
        }
        
        private void OnGetCustomersOperationCompleted(object arg) {
            if ((this.GetCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetTotalUpdates", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTotalUpdates(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID) {
            object[] results = this.Invoke("GetTotalUpdates", new object[] {
                        Customerupdatedon,
                        Itemupdatedon,
                        IATupdatedon,
                        Barcodeupdatedon,
                        ICupdatedon,
                        PCupdatedon,
                        PCDupdatedon,
                        VCupdatedon,
                        VFupdatedon,
                        VLupdatedon,
                        offerUpdatedOn,
                        offerDetailUpdatedOn,
                        documentStatusUpdatedOn,
                        storesUpdatedOn,
                        linkedItemsUpdatedOn,
                        mmUpdatedOn,
                        documentTypeUpdatedOn,
                        userID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalUpdatesAsync(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID) {
            this.GetTotalUpdatesAsync(Customerupdatedon, Itemupdatedon, IATupdatedon, Barcodeupdatedon, ICupdatedon, PCupdatedon, PCDupdatedon, VCupdatedon, VFupdatedon, VLupdatedon, offerUpdatedOn, offerDetailUpdatedOn, documentStatusUpdatedOn, storesUpdatedOn, linkedItemsUpdatedOn, mmUpdatedOn, documentTypeUpdatedOn, userID, null);
        }
        
        /// <remarks/>
        public void GetTotalUpdatesAsync(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID, 
                    object userState) {
            if ((this.GetTotalUpdatesOperationCompleted == null)) {
                this.GetTotalUpdatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalUpdatesOperationCompleted);
            }
            this.InvokeAsync("GetTotalUpdates", new object[] {
                        Customerupdatedon,
                        Itemupdatedon,
                        IATupdatedon,
                        Barcodeupdatedon,
                        ICupdatedon,
                        PCupdatedon,
                        PCDupdatedon,
                        VCupdatedon,
                        VFupdatedon,
                        VLupdatedon,
                        offerUpdatedOn,
                        offerDetailUpdatedOn,
                        documentStatusUpdatedOn,
                        storesUpdatedOn,
                        linkedItemsUpdatedOn,
                        mmUpdatedOn,
                        documentTypeUpdatedOn,
                        userID}, this.GetTotalUpdatesOperationCompleted, userState);
        }
        
        private void OnGetTotalUpdatesOperationCompleted(object arg) {
            if ((this.GetTotalUpdatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalUpdatesCompleted(this, new GetTotalUpdatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/getUserStoreAccess", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TUserStoreAccess[] getUserStoreAccess(string userID) {
            object[] results = this.Invoke("getUserStoreAccess", new object[] {
                        userID});
            return ((TUserStoreAccess[])(results[0]));
        }
        
        /// <remarks/>
        public void getUserStoreAccessAsync(string userID) {
            this.getUserStoreAccessAsync(userID, null);
        }
        
        /// <remarks/>
        public void getUserStoreAccessAsync(string userID, object userState) {
            if ((this.getUserStoreAccessOperationCompleted == null)) {
                this.getUserStoreAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserStoreAccessOperationCompleted);
            }
            this.InvokeAsync("getUserStoreAccess", new object[] {
                        userID}, this.getUserStoreAccessOperationCompleted, userState);
        }
        
        private void OngetUserStoreAccessOperationCompleted(object arg) {
            if ((this.getUserStoreAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserStoreAccessCompleted(this, new getUserStoreAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/getStores", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TStore[] getStores(long updatedon, string userID) {
            object[] results = this.Invoke("getStores", new object[] {
                        updatedon,
                        userID});
            return ((TStore[])(results[0]));
        }
        
        /// <remarks/>
        public void getStoresAsync(long updatedon, string userID) {
            this.getStoresAsync(updatedon, userID, null);
        }
        
        /// <remarks/>
        public void getStoresAsync(long updatedon, string userID, object userState) {
            if ((this.getStoresOperationCompleted == null)) {
                this.getStoresOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStoresOperationCompleted);
            }
            this.InvokeAsync("getStores", new object[] {
                        updatedon,
                        userID}, this.getStoresOperationCompleted, userState);
        }
        
        private void OngetStoresOperationCompleted(object arg) {
            if ((this.getStoresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStoresCompleted(this, new getStoresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/getAppSettings", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public TAppSettings getAppSettings(string userID) {
            object[] results = this.Invoke("getAppSettings", new object[] {
                        userID});
            return ((TAppSettings)(results[0]));
        }
        
        /// <remarks/>
        public void getAppSettingsAsync(string userID) {
            this.getAppSettingsAsync(userID, null);
        }
        
        /// <remarks/>
        public void getAppSettingsAsync(string userID, object userState) {
            if ((this.getAppSettingsOperationCompleted == null)) {
                this.getAppSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAppSettingsOperationCompleted);
            }
            this.InvokeAsync("getAppSettings", new object[] {
                        userID}, this.getAppSettingsOperationCompleted, userState);
        }
        
        private void OngetAppSettingsOperationCompleted(object arg) {
            if ((this.getAppSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAppSettingsCompleted(this, new getAppSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/CleanFile", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CleanFile(string filename, string userID) {
            object[] results = this.Invoke("CleanFile", new object[] {
                        filename,
                        userID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CleanFileAsync(string filename, string userID) {
            this.CleanFileAsync(filename, userID, null);
        }
        
        /// <remarks/>
        public void CleanFileAsync(string filename, string userID, object userState) {
            if ((this.CleanFileOperationCompleted == null)) {
                this.CleanFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCleanFileOperationCompleted);
            }
            this.InvokeAsync("CleanFile", new object[] {
                        filename,
                        userID}, this.CleanFileOperationCompleted, userState);
        }
        
        private void OnCleanFileOperationCompleted(object arg) {
            if ((this.CleanFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CleanFileCompleted(this, new CleanFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetTotalUpdatesLink", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTotalUpdatesLink(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID) {
            object[] results = this.Invoke("GetTotalUpdatesLink", new object[] {
                        Customerupdatedon,
                        Itemupdatedon,
                        IATupdatedon,
                        Barcodeupdatedon,
                        ICupdatedon,
                        PCupdatedon,
                        PCDupdatedon,
                        VCupdatedon,
                        VFupdatedon,
                        VLupdatedon,
                        offerUpdatedOn,
                        offerDetailUpdatedOn,
                        documentStatusUpdatedOn,
                        storesUpdatedOn,
                        linkedItemsUpdatedOn,
                        mmUpdatedOn,
                        documentTypeUpdatedOn,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalUpdatesLinkAsync(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID) {
            this.GetTotalUpdatesLinkAsync(Customerupdatedon, Itemupdatedon, IATupdatedon, Barcodeupdatedon, ICupdatedon, PCupdatedon, PCDupdatedon, VCupdatedon, VFupdatedon, VLupdatedon, offerUpdatedOn, offerDetailUpdatedOn, documentStatusUpdatedOn, storesUpdatedOn, linkedItemsUpdatedOn, mmUpdatedOn, documentTypeUpdatedOn, userID, null);
        }
        
        /// <remarks/>
        public void GetTotalUpdatesLinkAsync(
                    long Customerupdatedon, 
                    long Itemupdatedon, 
                    long IATupdatedon, 
                    long Barcodeupdatedon, 
                    long ICupdatedon, 
                    long PCupdatedon, 
                    long PCDupdatedon, 
                    long VCupdatedon, 
                    long VFupdatedon, 
                    long VLupdatedon, 
                    long offerUpdatedOn, 
                    long offerDetailUpdatedOn, 
                    long documentStatusUpdatedOn, 
                    long storesUpdatedOn, 
                    long linkedItemsUpdatedOn, 
                    long mmUpdatedOn, 
                    long documentTypeUpdatedOn, 
                    string userID, 
                    object userState) {
            if ((this.GetTotalUpdatesLinkOperationCompleted == null)) {
                this.GetTotalUpdatesLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalUpdatesLinkOperationCompleted);
            }
            this.InvokeAsync("GetTotalUpdatesLink", new object[] {
                        Customerupdatedon,
                        Itemupdatedon,
                        IATupdatedon,
                        Barcodeupdatedon,
                        ICupdatedon,
                        PCupdatedon,
                        PCDupdatedon,
                        VCupdatedon,
                        VFupdatedon,
                        VLupdatedon,
                        offerUpdatedOn,
                        offerDetailUpdatedOn,
                        documentStatusUpdatedOn,
                        storesUpdatedOn,
                        linkedItemsUpdatedOn,
                        mmUpdatedOn,
                        documentTypeUpdatedOn,
                        userID}, this.GetTotalUpdatesLinkOperationCompleted, userState);
        }
        
        private void OnGetTotalUpdatesLinkOperationCompleted(object arg) {
            if ((this.GetTotalUpdatesLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalUpdatesLinkCompleted(this, new GetTotalUpdatesLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/CheckValidStorePriceCatalogPair", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckValidStorePriceCatalogPair(string store, string priceCatalog) {
            object[] results = this.Invoke("CheckValidStorePriceCatalogPair", new object[] {
                        store,
                        priceCatalog});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckValidStorePriceCatalogPairAsync(string store, string priceCatalog) {
            this.CheckValidStorePriceCatalogPairAsync(store, priceCatalog, null);
        }
        
        /// <remarks/>
        public void CheckValidStorePriceCatalogPairAsync(string store, string priceCatalog, object userState) {
            if ((this.CheckValidStorePriceCatalogPairOperationCompleted == null)) {
                this.CheckValidStorePriceCatalogPairOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckValidStorePriceCatalogPairOperationCompleted);
            }
            this.InvokeAsync("CheckValidStorePriceCatalogPair", new object[] {
                        store,
                        priceCatalog}, this.CheckValidStorePriceCatalogPairOperationCompleted, userState);
        }
        
        private void OnCheckValidStorePriceCatalogPairOperationCompleted(object arg) {
            if ((this.CheckValidStorePriceCatalogPairCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckValidStorePriceCatalogPairCompleted(this, new CheckValidStorePriceCatalogPairCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentHeaders", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public TDocumentHeader[] GetDocumentHeaders(string userid, string customerid) {
            object[] results = this.Invoke("GetDocumentHeaders", new object[] {
                        userid,
                        customerid});
            return ((TDocumentHeader[])(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHeadersAsync(string userid, string customerid) {
            this.GetDocumentHeadersAsync(userid, customerid, null);
        }
        
        /// <remarks/>
        public void GetDocumentHeadersAsync(string userid, string customerid, object userState) {
            if ((this.GetDocumentHeadersOperationCompleted == null)) {
                this.GetDocumentHeadersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHeadersOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHeaders", new object[] {
                        userid,
                        customerid}, this.GetDocumentHeadersOperationCompleted, userState);
        }
        
        private void OnGetDocumentHeadersOperationCompleted(object arg) {
            if ((this.GetDocumentHeadersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHeadersCompleted(this, new GetDocumentHeadersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentHeadersXML", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDocumentHeadersXML(string userid, string customerid) {
            object[] results = this.Invoke("GetDocumentHeadersXML", new object[] {
                        userid,
                        customerid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHeadersXMLAsync(string userid, string customerid) {
            this.GetDocumentHeadersXMLAsync(userid, customerid, null);
        }
        
        /// <remarks/>
        public void GetDocumentHeadersXMLAsync(string userid, string customerid, object userState) {
            if ((this.GetDocumentHeadersXMLOperationCompleted == null)) {
                this.GetDocumentHeadersXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHeadersXMLOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHeadersXML", new object[] {
                        userid,
                        customerid}, this.GetDocumentHeadersXMLOperationCompleted, userState);
        }
        
        private void OnGetDocumentHeadersXMLOperationCompleted(object arg) {
            if ((this.GetDocumentHeadersXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHeadersXMLCompleted(this, new GetDocumentHeadersXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDocumentHeadersXMLWithFilters", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDocumentHeadersXMLWithFilters(string userid, string customerid, long fromTicks, long toTicks, string docStatusID, string docTypeID, string hasBeenChecked, string hasBeenExecuted) {
            object[] results = this.Invoke("GetDocumentHeadersXMLWithFilters", new object[] {
                        userid,
                        customerid,
                        fromTicks,
                        toTicks,
                        docStatusID,
                        docTypeID,
                        hasBeenChecked,
                        hasBeenExecuted});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentHeadersXMLWithFiltersAsync(string userid, string customerid, long fromTicks, long toTicks, string docStatusID, string docTypeID, string hasBeenChecked, string hasBeenExecuted) {
            this.GetDocumentHeadersXMLWithFiltersAsync(userid, customerid, fromTicks, toTicks, docStatusID, docTypeID, hasBeenChecked, hasBeenExecuted, null);
        }
        
        /// <remarks/>
        public void GetDocumentHeadersXMLWithFiltersAsync(string userid, string customerid, long fromTicks, long toTicks, string docStatusID, string docTypeID, string hasBeenChecked, string hasBeenExecuted, object userState) {
            if ((this.GetDocumentHeadersXMLWithFiltersOperationCompleted == null)) {
                this.GetDocumentHeadersXMLWithFiltersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentHeadersXMLWithFiltersOperationCompleted);
            }
            this.InvokeAsync("GetDocumentHeadersXMLWithFilters", new object[] {
                        userid,
                        customerid,
                        fromTicks,
                        toTicks,
                        docStatusID,
                        docTypeID,
                        hasBeenChecked,
                        hasBeenExecuted}, this.GetDocumentHeadersXMLWithFiltersOperationCompleted, userState);
        }
        
        private void OnGetDocumentHeadersXMLWithFiltersOperationCompleted(object arg) {
            if ((this.GetDocumentHeadersXMLWithFiltersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentHeadersXMLWithFiltersCompleted(this, new GetDocumentHeadersXMLWithFiltersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/CreateCustomer", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateCustomer(string taxCode, string customer_code, string userid, string store, string priceCatalog) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        taxCode,
                        customer_code,
                        userid,
                        store,
                        priceCatalog});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(string taxCode, string customer_code, string userid, string store, string priceCatalog) {
            this.CreateCustomerAsync(taxCode, customer_code, userid, store, priceCatalog, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(string taxCode, string customer_code, string userid, string store, string priceCatalog, object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        taxCode,
                        customer_code,
                        userid,
                        store,
                        priceCatalog}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetImagesLink", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetImagesLink(string userID, string[] imageGuids) {
            object[] results = this.Invoke("GetImagesLink", new object[] {
                        userID,
                        imageGuids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesLinkAsync(string userID, string[] imageGuids) {
            this.GetImagesLinkAsync(userID, imageGuids, null);
        }
        
        /// <remarks/>
        public void GetImagesLinkAsync(string userID, string[] imageGuids, object userState) {
            if ((this.GetImagesLinkOperationCompleted == null)) {
                this.GetImagesLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesLinkOperationCompleted);
            }
            this.InvokeAsync("GetImagesLink", new object[] {
                        userID,
                        imageGuids}, this.GetImagesLinkOperationCompleted, userState);
        }
        
        private void OnGetImagesLinkOperationCompleted(object arg) {
            if ((this.GetImagesLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesLinkCompleted(this, new GetImagesLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/DoesExistsAndIsActive", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] DoesExistsAndIsActive(string[] objectIds, string objectType, string userid) {
            object[] results = this.Invoke("DoesExistsAndIsActive", new object[] {
                        objectIds,
                        objectType,
                        userid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void DoesExistsAndIsActiveAsync(string[] objectIds, string objectType, string userid) {
            this.DoesExistsAndIsActiveAsync(objectIds, objectType, userid, null);
        }
        
        /// <remarks/>
        public void DoesExistsAndIsActiveAsync(string[] objectIds, string objectType, string userid, object userState) {
            if ((this.DoesExistsAndIsActiveOperationCompleted == null)) {
                this.DoesExistsAndIsActiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoesExistsAndIsActiveOperationCompleted);
            }
            this.InvokeAsync("DoesExistsAndIsActive", new object[] {
                        objectIds,
                        objectType,
                        userid}, this.DoesExistsAndIsActiveOperationCompleted, userState);
        }
        
        private void OnDoesExistsAndIsActiveOperationCompleted(object arg) {
            if ((this.DoesExistsAndIsActiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoesExistsAndIsActiveCompleted(this, new DoesExistsAndIsActiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetInactiveObjects", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetInactiveObjects(long mobileUpdatedOn, string objectType, string userid) {
            object[] results = this.Invoke("GetInactiveObjects", new object[] {
                        mobileUpdatedOn,
                        objectType,
                        userid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetInactiveObjectsAsync(long mobileUpdatedOn, string objectType, string userid) {
            this.GetInactiveObjectsAsync(mobileUpdatedOn, objectType, userid, null);
        }
        
        /// <remarks/>
        public void GetInactiveObjectsAsync(long mobileUpdatedOn, string objectType, string userid, object userState) {
            if ((this.GetInactiveObjectsOperationCompleted == null)) {
                this.GetInactiveObjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInactiveObjectsOperationCompleted);
            }
            this.InvokeAsync("GetInactiveObjects", new object[] {
                        mobileUpdatedOn,
                        objectType,
                        userid}, this.GetInactiveObjectsOperationCompleted, userState);
        }
        
        private void OnGetInactiveObjectsOperationCompleted(object arg) {
            if ((this.GetInactiveObjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInactiveObjectsCompleted(this, new GetInactiveObjectsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetStoreControllerGuid", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid GetStoreControllerGuid(string storeControllerId, string username, string password) {
            object[] results = this.Invoke("GetStoreControllerGuid", new object[] {
                        storeControllerId,
                        username,
                        password});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreControllerGuidAsync(string storeControllerId, string username, string password) {
            this.GetStoreControllerGuidAsync(storeControllerId, username, password, null);
        }
        
        /// <remarks/>
        public void GetStoreControllerGuidAsync(string storeControllerId, string username, string password, object userState) {
            if ((this.GetStoreControllerGuidOperationCompleted == null)) {
                this.GetStoreControllerGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreControllerGuidOperationCompleted);
            }
            this.InvokeAsync("GetStoreControllerGuid", new object[] {
                        storeControllerId,
                        username,
                        password}, this.GetStoreControllerGuidOperationCompleted, userState);
        }
        
        private void OnGetStoreControllerGuidOperationCompleted(object arg) {
            if ((this.GetStoreControllerGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreControllerGuidCompleted(this, new GetStoreControllerGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetOwner", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOwner(string storeControllerID, string username, string password) {
            object[] results = this.Invoke("GetOwner", new object[] {
                        storeControllerID,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOwnerAsync(string storeControllerID, string username, string password) {
            this.GetOwnerAsync(storeControllerID, username, password, null);
        }
        
        /// <remarks/>
        public void GetOwnerAsync(string storeControllerID, string username, string password, object userState) {
            if ((this.GetOwnerOperationCompleted == null)) {
                this.GetOwnerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOwnerOperationCompleted);
            }
            this.InvokeAsync("GetOwner", new object[] {
                        storeControllerID,
                        username,
                        password}, this.GetOwnerOperationCompleted, userState);
        }
        
        private void OnGetOwnerOperationCompleted(object arg) {
            if ((this.GetOwnerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOwnerCompleted(this, new GetOwnerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetStoreControllerSettings", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetStoreControllerSettings(string storeControllerID, string username, string password) {
            object[] results = this.Invoke("GetStoreControllerSettings", new object[] {
                        storeControllerID,
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreControllerSettingsAsync(string storeControllerID, string username, string password) {
            this.GetStoreControllerSettingsAsync(storeControllerID, username, password, null);
        }
        
        /// <remarks/>
        public void GetStoreControllerSettingsAsync(string storeControllerID, string username, string password, object userState) {
            if ((this.GetStoreControllerSettingsOperationCompleted == null)) {
                this.GetStoreControllerSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreControllerSettingsOperationCompleted);
            }
            this.InvokeAsync("GetStoreControllerSettings", new object[] {
                        storeControllerID,
                        username,
                        password}, this.GetStoreControllerSettingsOperationCompleted, userState);
        }
        
        private void OnGetStoreControllerSettingsOperationCompleted(object arg) {
            if ((this.GetStoreControllerSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreControllerSettingsCompleted(this, new GetStoreControllerSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetStoreOfStoreController", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid GetStoreOfStoreController(string storeControllerId, string username, string password) {
            object[] results = this.Invoke("GetStoreOfStoreController", new object[] {
                        storeControllerId,
                        username,
                        password});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void GetStoreOfStoreControllerAsync(string storeControllerId, string username, string password) {
            this.GetStoreOfStoreControllerAsync(storeControllerId, username, password, null);
        }
        
        /// <remarks/>
        public void GetStoreOfStoreControllerAsync(string storeControllerId, string username, string password, object userState) {
            if ((this.GetStoreOfStoreControllerOperationCompleted == null)) {
                this.GetStoreOfStoreControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStoreOfStoreControllerOperationCompleted);
            }
            this.InvokeAsync("GetStoreOfStoreController", new object[] {
                        storeControllerId,
                        username,
                        password}, this.GetStoreOfStoreControllerOperationCompleted, userState);
        }
        
        private void OnGetStoreOfStoreControllerOperationCompleted(object arg) {
            if ((this.GetStoreOfStoreControllerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStoreOfStoreControllerCompleted(this, new GetStoreOfStoreControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetDefaultCustomerOfStoreController", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid GetDefaultCustomerOfStoreController(string storeControllerId, string username, string password) {
            object[] results = this.Invoke("GetDefaultCustomerOfStoreController", new object[] {
                        storeControllerId,
                        username,
                        password});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void GetDefaultCustomerOfStoreControllerAsync(string storeControllerId, string username, string password) {
            this.GetDefaultCustomerOfStoreControllerAsync(storeControllerId, username, password, null);
        }
        
        /// <remarks/>
        public void GetDefaultCustomerOfStoreControllerAsync(string storeControllerId, string username, string password, object userState) {
            if ((this.GetDefaultCustomerOfStoreControllerOperationCompleted == null)) {
                this.GetDefaultCustomerOfStoreControllerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDefaultCustomerOfStoreControllerOperationCompleted);
            }
            this.InvokeAsync("GetDefaultCustomerOfStoreController", new object[] {
                        storeControllerId,
                        username,
                        password}, this.GetDefaultCustomerOfStoreControllerOperationCompleted, userState);
        }
        
        private void OnGetDefaultCustomerOfStoreControllerOperationCompleted(object arg) {
            if ((this.GetDefaultCustomerOfStoreControllerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDefaultCustomerOfStoreControllerCompleted(this, new GetDefaultCustomerOfStoreControllerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://weborders.masoutis.gr/GetMobileFilelist", RequestNamespace="https://weborders.masoutis.gr/", ResponseNamespace="https://weborders.masoutis.gr/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfString")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(NestingLevel=1)]
        public string[][] GetMobileFilelist() {
            object[] results = this.Invoke("GetMobileFilelist", new object[0]);
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileFilelistAsync() {
            this.GetMobileFilelistAsync(null);
        }
        
        /// <remarks/>
        public void GetMobileFilelistAsync(object userState) {
            if ((this.GetMobileFilelistOperationCompleted == null)) {
                this.GetMobileFilelistOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileFilelistOperationCompleted);
            }
            this.InvokeAsync("GetMobileFilelist", new object[0], this.GetMobileFilelistOperationCompleted, userState);
        }
        
        private void OnGetMobileFilelistOperationCompleted(object arg) {
            if ((this.GetMobileFilelistCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileFilelistCompleted(this, new GetMobileFilelistCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TDocumentStatus {
        
        private System.Guid oidField;
        
        private string descriptionField;
        
        private bool isDefaultField;
        
        /// <remarks/>
        public System.Guid Oid {
            get {
                return this.oidField;
            }
            set {
                this.oidField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TDocumentHeader {
        
        private long finalizedDateTimeField;
        
        private double netTotalField;
        
        private double discountField;
        
        private double finalField;
        
        /// <remarks/>
        public long finalizedDateTime {
            get {
                return this.finalizedDateTimeField;
            }
            set {
                this.finalizedDateTimeField = value;
            }
        }
        
        /// <remarks/>
        public double netTotal {
            get {
                return this.netTotalField;
            }
            set {
                this.netTotalField = value;
            }
        }
        
        /// <remarks/>
        public double discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public double final {
            get {
                return this.finalField;
            }
            set {
                this.finalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TAppSettings {
        
        private bool barcodePadField;
        
        private bool codePadField;
        
        private bool discountPermitedField;
        
        private string barcodePadCharField;
        
        private string codePadCharField;
        
        private int barcodePadLengthField;
        
        private int codePadLengthField;
        
        private int computeDigitsField;
        
        private int computeValueDigitsField;
        
        private int displayDigitsField;
        
        private int displayValueDigitsField;
        
        /// <remarks/>
        public bool BarcodePad {
            get {
                return this.barcodePadField;
            }
            set {
                this.barcodePadField = value;
            }
        }
        
        /// <remarks/>
        public bool CodePad {
            get {
                return this.codePadField;
            }
            set {
                this.codePadField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscountPermited {
            get {
                return this.discountPermitedField;
            }
            set {
                this.discountPermitedField = value;
            }
        }
        
        /// <remarks/>
        public string BarcodePadChar {
            get {
                return this.barcodePadCharField;
            }
            set {
                this.barcodePadCharField = value;
            }
        }
        
        /// <remarks/>
        public string CodePadChar {
            get {
                return this.codePadCharField;
            }
            set {
                this.codePadCharField = value;
            }
        }
        
        /// <remarks/>
        public int BarcodePadLength {
            get {
                return this.barcodePadLengthField;
            }
            set {
                this.barcodePadLengthField = value;
            }
        }
        
        /// <remarks/>
        public int CodePadLength {
            get {
                return this.codePadLengthField;
            }
            set {
                this.codePadLengthField = value;
            }
        }
        
        /// <remarks/>
        public int ComputeDigits {
            get {
                return this.computeDigitsField;
            }
            set {
                this.computeDigitsField = value;
            }
        }
        
        /// <remarks/>
        public int ComputeValueDigits {
            get {
                return this.computeValueDigitsField;
            }
            set {
                this.computeValueDigitsField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayDigits {
            get {
                return this.displayDigitsField;
            }
            set {
                this.displayDigitsField = value;
            }
        }
        
        /// <remarks/>
        public int DisplayValueDigits {
            get {
                return this.displayValueDigitsField;
            }
            set {
                this.displayValueDigitsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TStore {
        
        private System.Guid oidField;
        
        private string codeField;
        
        private string nameField;
        
        private bool isCentralStoreField;
        
        private long updatedOnField;
        
        /// <remarks/>
        public System.Guid Oid {
            get {
                return this.oidField;
            }
            set {
                this.oidField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCentralStore {
            get {
                return this.isCentralStoreField;
            }
            set {
                this.isCentralStoreField = value;
            }
        }
        
        /// <remarks/>
        public long UpdatedOn {
            get {
                return this.updatedOnField;
            }
            set {
                this.updatedOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TUserStoreAccess {
        
        private System.Guid userIDField;
        
        private System.Guid storeIDField;
        
        private long updatedOnField;
        
        /// <remarks/>
        public System.Guid UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid StoreID {
            get {
                return this.storeIDField;
            }
            set {
                this.storeIDField = value;
            }
        }
        
        /// <remarks/>
        public long UpdatedOn {
            get {
                return this.updatedOnField;
            }
            set {
                this.updatedOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TCustomer {
        
        private string codeField;
        
        private string companyNameField;
        
        private string taxCodeField;
        
        private System.Guid oidField;
        
        private System.Guid priceListOidField;
        
        private System.Guid vatLevelField;
        
        private System.Guid storeOidField;
        
        private string defaultAddressField;
        
        private string defaultPhoneField;
        
        private long updateOnField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string TaxCode {
            get {
                return this.taxCodeField;
            }
            set {
                this.taxCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid Oid {
            get {
                return this.oidField;
            }
            set {
                this.oidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid PriceListOid {
            get {
                return this.priceListOidField;
            }
            set {
                this.priceListOidField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid VatLevel {
            get {
                return this.vatLevelField;
            }
            set {
                this.vatLevelField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid StoreOid {
            get {
                return this.storeOidField;
            }
            set {
                this.storeOidField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultAddress {
            get {
                return this.defaultAddressField;
            }
            set {
                this.defaultAddressField = value;
            }
        }
        
        /// <remarks/>
        public string DefaultPhone {
            get {
                return this.defaultPhoneField;
            }
            set {
                this.defaultPhoneField = value;
            }
        }
        
        /// <remarks/>
        public long UpdateOn {
            get {
                return this.updateOnField;
            }
            set {
                this.updateOnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TInvalidItem {
        
        private System.Guid itemOidField;
        
        private InactiveItemReason reasonField;
        
        /// <remarks/>
        public System.Guid ItemOid {
            get {
                return this.itemOidField;
            }
            set {
                this.itemOidField = value;
            }
        }
        
        /// <remarks/>
        public InactiveItemReason Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public enum InactiveItemReason {
        
        /// <remarks/>
        INACTIVE,
        
        /// <remarks/>
        NOPRICE,
        
        /// <remarks/>
        NOT_FOUND,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public partial class TransferedDocumentDetail {
        
        private string barcodeField;
        
        private string itemCodeField;
        
        private string itemNameField;
        
        private double finalUnitPriceField;
        
        private double firstDiscountField;
        
        private double grossTotalField;
        
        private double unitPriceField;
        
        private double qtyField;
        
        private double netTotalField;
        
        private double netTotalAfterDiscountField;
        
        private double secondDiscountField;
        
        private double totalDiscountField;
        
        private double totalVatAmountField;
        
        private double unitPriceAfterDiscountField;
        
        private double vatAmountField;
        
        private double vatFactorField;
        
        private System.Guid itemOidField;
        
        /// <remarks/>
        public string Barcode {
            get {
                return this.barcodeField;
            }
            set {
                this.barcodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public double FinalUnitPrice {
            get {
                return this.finalUnitPriceField;
            }
            set {
                this.finalUnitPriceField = value;
            }
        }
        
        /// <remarks/>
        public double FirstDiscount {
            get {
                return this.firstDiscountField;
            }
            set {
                this.firstDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double GrossTotal {
            get {
                return this.grossTotalField;
            }
            set {
                this.grossTotalField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPrice {
            get {
                return this.unitPriceField;
            }
            set {
                this.unitPriceField = value;
            }
        }
        
        /// <remarks/>
        public double Qty {
            get {
                return this.qtyField;
            }
            set {
                this.qtyField = value;
            }
        }
        
        /// <remarks/>
        public double NetTotal {
            get {
                return this.netTotalField;
            }
            set {
                this.netTotalField = value;
            }
        }
        
        /// <remarks/>
        public double NetTotalAfterDiscount {
            get {
                return this.netTotalAfterDiscountField;
            }
            set {
                this.netTotalAfterDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double SecondDiscount {
            get {
                return this.secondDiscountField;
            }
            set {
                this.secondDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double TotalDiscount {
            get {
                return this.totalDiscountField;
            }
            set {
                this.totalDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double TotalVatAmount {
            get {
                return this.totalVatAmountField;
            }
            set {
                this.totalVatAmountField = value;
            }
        }
        
        /// <remarks/>
        public double UnitPriceAfterDiscount {
            get {
                return this.unitPriceAfterDiscountField;
            }
            set {
                this.unitPriceAfterDiscountField = value;
            }
        }
        
        /// <remarks/>
        public double VatAmount {
            get {
                return this.vatAmountField;
            }
            set {
                this.vatAmountField = value;
            }
        }
        
        /// <remarks/>
        public double VatFactor {
            get {
                return this.vatFactorField;
            }
            set {
                this.vatFactorField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ItemOid {
            get {
                return this.itemOidField;
            }
            set {
                this.itemOidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://weborders.masoutis.gr/")]
    public enum UserType {
        
        /// <remarks/>
        COMPANYUSER,
        
        /// <remarks/>
        TRADER,
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        ADMIN,
        
        /// <remarks/>
        NONE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PostDataCompletedEventHandler(object sender, PostDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetSeriesCompletedEventHandler(object sender, GetSeriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentStatusCompletedEventHandler(object sender, GetDocumentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TDocumentStatus[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TDocumentStatus[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetItemCompletedEventHandler(object sender, GetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetItemWithBarcodeCustomerCompletedEventHandler(object sender, GetItemWithBarcodeCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemWithBarcodeCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemWithBarcodeCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetItemWithBarcodeCompletedEventHandler(object sender, GetItemWithBarcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetItemWithBarcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetItemWithBarcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPriceCompletedEventHandler(object sender, GetPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPriceCustomerCompletedEventHandler(object sender, GetPriceCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPriceCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPriceCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentDetailCustomerCompletedEventHandler(object sender, GetDocumentDetailCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDetailCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDetailCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransferedDocumentDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransferedDocumentDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentDetailCompletedEventHandler(object sender, GetDocumentDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransferedDocumentDetail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransferedDocumentDetail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void ValidateOrderCompletedEventHandler(object sender, ValidateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TInvalidItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TInvalidItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void PostDocumentCompletedEventHandler(object sender, PostDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PostDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PostDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserTypeCompletedEventHandler(object sender, GetUserTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserType Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserType)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCustomersOfUserCompletedEventHandler(object sender, GetCustomersOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TCustomer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TCustomer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCustomersCompletedEventHandler(object sender, GetCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TCustomer[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TCustomer[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTotalUpdatesCompletedEventHandler(object sender, GetTotalUpdatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalUpdatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalUpdatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getUserStoreAccessCompletedEventHandler(object sender, getUserStoreAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserStoreAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserStoreAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TUserStoreAccess[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TUserStoreAccess[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getStoresCompletedEventHandler(object sender, getStoresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStoresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStoresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TStore[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TStore[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void getAppSettingsCompletedEventHandler(object sender, getAppSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAppSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAppSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TAppSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TAppSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CleanFileCompletedEventHandler(object sender, CleanFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CleanFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CleanFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetTotalUpdatesLinkCompletedEventHandler(object sender, GetTotalUpdatesLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalUpdatesLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalUpdatesLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckValidStorePriceCatalogPairCompletedEventHandler(object sender, CheckValidStorePriceCatalogPairCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckValidStorePriceCatalogPairCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckValidStorePriceCatalogPairCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentHeadersCompletedEventHandler(object sender, GetDocumentHeadersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHeadersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHeadersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TDocumentHeader[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TDocumentHeader[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentHeadersXMLCompletedEventHandler(object sender, GetDocumentHeadersXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHeadersXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHeadersXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDocumentHeadersXMLWithFiltersCompletedEventHandler(object sender, GetDocumentHeadersXMLWithFiltersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentHeadersXMLWithFiltersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentHeadersXMLWithFiltersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CreateCustomerCompletedEventHandler(object sender, CreateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetImagesLinkCompletedEventHandler(object sender, GetImagesLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void DoesExistsAndIsActiveCompletedEventHandler(object sender, DoesExistsAndIsActiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoesExistsAndIsActiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoesExistsAndIsActiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetInactiveObjectsCompletedEventHandler(object sender, GetInactiveObjectsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInactiveObjectsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInactiveObjectsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStoreControllerGuidCompletedEventHandler(object sender, GetStoreControllerGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreControllerGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreControllerGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetOwnerCompletedEventHandler(object sender, GetOwnerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOwnerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOwnerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStoreControllerSettingsCompletedEventHandler(object sender, GetStoreControllerSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreControllerSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreControllerSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetStoreOfStoreControllerCompletedEventHandler(object sender, GetStoreOfStoreControllerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStoreOfStoreControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStoreOfStoreControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetDefaultCustomerOfStoreControllerCompletedEventHandler(object sender, GetDefaultCustomerOfStoreControllerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDefaultCustomerOfStoreControllerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDefaultCustomerOfStoreControllerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMobileFilelistCompletedEventHandler(object sender, GetMobileFilelistCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileFilelistCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileFilelistCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[][] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[][])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591