@using ITS.Retail.ResourcesLib;

@{
    Layout = "~/Areas/B2C/Views/Shared/_Layout.cshtml";
}

<div class="row page">
    @{
        <div class="page-header title col-md-12">
            <h1 class="text-center">@Resources.ForgotYourPassword</h1>
        </div>
        <div class="col-md-12">
            <p>@Resources.ChangeYourPassword. @Resources.YourNewPasswordWillBeSafe.</p>

            <ul class="list-group">

                <li class="list-group-item">
                    <span class="badge">1</span>@Resources.EnterAValidAddressOnFollowingField.
                </li>
                <li class="list-group-item">
                    <span class="badge">2</span>@Resources.OnTheFollowingEmailALinkWillBeSend.
                </li>
                <li class="list-group-item">
                    <span class="badge">3</span>@Resources.ClickOnLinkAndNewMailWithNewPasswordWillBeSend.
                </li>
            </ul>

            @{
                Dictionary<string, object> FormAttributes = new Dictionary<string, object>();
                FormAttributes.Add("role", "form");
                FormAttributes.Add("autocomplete", "off");
                FormAttributes.Add("class", "form-inline");
            }

            @using (Html.BeginForm("ForgotPassword", "User", FormMethod.Post, htmlAttributes: FormAttributes))
            {
                <div class="row">
                    <div class="col-sm-10 col-xs-10">
                        <div class="form-group width-100">

                            <label class="text-left">@Resources.EnterYourEmailAddress</label>
                            @Html.DevExpress().TextBox(deSettings =>
                            {
                                deSettings.Name = "email";
                                deSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                                deSettings.ControlStyle.CssClass = "form-control";
                                deSettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                                deSettings.Properties.ValidationSettings.Display = Display.Dynamic;
                                deSettings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Right;
                            }).GetHtml()

                        </div>
                    </div>
                    <div class="col-sm-2 col-xs-2">
                        <div class="form-group pull-right">
                            @Html.DevExpress().Button(deSettings =>
                                    {
                                        deSettings.ControlStyle.CssClass = "blue-button margin-top-25";
                                        deSettings.Height = 42;
                                        deSettings.Name = "ForgotPasswordSubmit";
                                        deSettings.Text = Resources.Submit;
                                        deSettings.UseSubmitBehavior = true;
                                    }).GetHtml()
                        </div>
                    </div>
                </div>
            }
        </div>

    }
</div>