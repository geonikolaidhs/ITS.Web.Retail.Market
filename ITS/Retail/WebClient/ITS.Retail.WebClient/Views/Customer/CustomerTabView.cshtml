@model ITS.Retail.Model.Customer
@using ITS.Retail.ResourcesLib;

@Html.DevExpress().PageControl(page_control_settings =>
{
    page_control_settings.AccessibilityCompliant = false;
    page_control_settings.Name = "pcFeatures" + Model.Oid.ToString().Replace("-", "_");
    page_control_settings.ActivateTabPageAction = ActivateTabPageAction.Click;
    page_control_settings.TabAlign = TabAlign.Left;
    page_control_settings.TabPosition = TabPosition.Top;
    page_control_settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    page_control_settings.CallbackRouteValues = new { Controller = "Customer", Action = "CustomerTabView", displayCommands = ViewData["displayCommands"], CustomerID = Model.Oid, editMode = ViewBag.EditMode };
    page_control_settings.TabPages.Add(Resources.Address).SetContent(() =>
    {
        @Html.RenderAction("AddressGrid", "Address", new { strTraderID = Model.Trader.Oid, displayCommands = ViewData["displayCommands"] });
        if (ViewData["displayCommands"] == null || (bool)ViewData["displayCommands"] == false)
        {
            ViewContext.Writer.Write("<br/><div id='divGridPhone_" + ViewData["TraderID"].ToString().Replace('-', '_') + "'></div>");
        }
    });

    page_control_settings.TabPages.Add(Resources.PriceCatalogAndStores).SetContent(() =>
    {
        @Html.RenderAction("CustomerStorePriceListGrid", new { displayCommands = ViewData["displayCommands"], CustomerID = Model.Oid });
    });
    if ((bool)ViewData["GDPREnabled"] == true)
    {
        page_control_settings.TabPages.Add(Resources.ChildInfo).SetContent(() =>
        {
            @Html.RenderAction("ChildGrid", new { displayCommands = ViewData["displayCommands"], CustomerID = Model.Oid });
        });
    }
    page_control_settings.TabPages.Add(Resources.CustomerCategories).SetContent(() =>
    {
        @Html.RenderPartial("CustomerAnalyticTreeGrid", Model.CustomerAnalyticTrees);
    });

    if (ViewBag.EditMode != null && !(bool)ViewBag.EditMode)
    {
        page_control_settings.TabPages.Add(Resources.VariableValues).SetContent(() =>
        {
            Html.RenderAction("ShowVariableValues", "VariableValuesDisplay", new
            {
                objectID = Model.Oid,
                typeName = (string)Session["ControllerName"] + "Controller"
                /* , mode = VariableDisplayValuesMode.VIEW*/
            });
        });
    }
}).GetHtml()