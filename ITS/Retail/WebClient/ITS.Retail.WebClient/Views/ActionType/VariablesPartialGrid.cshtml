@using System.Web.UI.WebControls;
@using ITS.Retail.ResourcesLib;
@using ITS.Retail.WebClient;
@using System.Web.Optimization;
@using ITS.Retail.Common;
@using ITS.Retail.WebClient.Controllers;
@using ITS.Retail.Model;
@using ITS.Retail.Platform.Enumerations;
@using ITS.Retail.WebClient.Helpers;
@using ITS.Retail.WebClient.Extensions;

@{
    GridViewSettings settings = HtmlGridExtension.GetDefaultSettings(viewContext: ViewContext, objectType: typeof(VariableActionType), controllerType: typeof(ActionTypeController), gridName: "grdVariableActionTypes", columnType: GridViewCommandColumnType.ICONS, generateColumns:false);

    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "ActionType", Action = "InlineUpdateVariablePartial" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "ActionType", Action = "InlineUpdateVariablePartial" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "ActionType", Action = "InlineDeleteVariablePartial" };
    settings.CallbackRouteValues = new { Controller = "ActionType", Action = "VariablesPartialGrid" };
    settings.ClientSideEvents.BeginCallback = "ActionType.OnActionTypeCategoryChanged";
    settings.CommandColumn.CellStyle.CssClass = "firstCollumn";
    settings.CommandColumn.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.CommandColumn.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsText.Title = Resources.Variables;
    settings.SettingsText.PopupEditFormCaption = Resources.Variable;

    settings.Columns.Add(column =>
    {
        column.FieldName = "Variable.Description";
        column.Caption = Resources.Description;
        column.SortAscending();
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "VariableAction";
        column.Caption = Resources.Action;
        column.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(((VariableMethods)DataBinder.Eval(c.DataItem, "VariableAction")).ToLocalizedString());
        });
    });

    settings.SetEditFormTemplateContent(editContent =>
    {
        var item = ViewBag.CurrentItem != null ? ViewBag.CurrentItem : editContent.DataItem;


        ViewContext.Writer.Write("<div class='ValidationContainer'>");
        //Header banner
        HeaderOptions headerOptions = new HeaderOptions("");
        headerOptions.SaveButton.Name = "btnVariableActionTypeUpdate";
        headerOptions.SaveButton.OnClick = "function(s, e){ValidateForm(s,e," + settings.Name + ");}";
        headerOptions.CancelButton.Name = "btnVariableActionTypeCancel";
        headerOptions.CancelButton.OnClick = "function(s, e){ " + settings.Name + ".CancelEdit(); }";
        headerOptions.ViewType = eViewType.PopUp;
        HtmlGenerator.CreateViewHeader(Html, ViewData, headerOptions, true);
        //End of header banner


        ViewContext.Writer.Write("<table class=\"item-center-div\"><tr><td>");

        Html.DevExpress().ComboBox(combosettings =>
        {
            combosettings.Properties.Caption = Resources.Variable + ":";
            combosettings.Properties.CaptionStyle.CssClass = "label";
            combosettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            combosettings.Name = "VariableCb";
            combosettings.ControlStyle.CssClass = "editor";
            combosettings.Properties.TextField = "Description";
            combosettings.Properties.ValueField = "Oid";
            combosettings.Properties.ValueType = typeof(Guid);
            combosettings.ShowModelErrors = true;
            combosettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            combosettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            combosettings.Properties.DropDownStyle = DropDownStyle.DropDownList;
            combosettings.Properties.CallbackPageSize = 15;
            combosettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
            EditButton button = new EditButton(" ");
            button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
            button.Image.AlternateText = Resources.Clear;
            combosettings.Properties.Buttons.Add(button);
            button.ClientVisible = DataBinder.Eval(item, "Variable!Key") == null;
            combosettings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
            combosettings.ClientEnabled = DataBinder.Eval(item, "Variable!Key") == null;
            combosettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
        }).BindList(ViewBag.VariablesComboBox).BindList(ActionTypeController.GetObjectByValue<Variable>(DataBinder.Eval(item, "Variable!Key"))).Bind(DataBinder.Eval(item, "Variable!Key")).GetHtml();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().ComboBox(combosettings =>
        {
            combosettings.Properties.Caption = Resources.Action + ":";
            combosettings.Properties.CaptionStyle.CssClass = "label";
            combosettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            combosettings.Name = "VariableAction";
            combosettings.ControlStyle.CssClass = "editor";
            combosettings.Properties.TextField = "Value";
            combosettings.Properties.ValueField = "Key";
            combosettings.Properties.ValueType = typeof(VariableMethods);
            combosettings.ShowModelErrors = true;
            combosettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            combosettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            combosettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
        }).BindList(Enum<VariableMethods>.GetLocalizedDictionary()).Bind(DataBinder.Eval(item, "VariableAction")).GetHtml();

        ViewContext.Writer.Write("</td></tr></table>");
        ViewContext.Writer.Write("</div>");

    });



    settings.DataBinding = (object sender, EventArgs e) =>
    {
        (sender as ASPxGridView).ForceDataRowType(typeof(VariableActionType));
    };

}

@Html.DevExpress().GridView(settings).Bind(Model).GetHtml()