@using ITS.Retail.ResourcesLib;

@Html.DevExpress().ComboBox(combosettings =>
{
    combosettings.Enabled = true;
    combosettings.Name = "MinistryDocumentTypeComboBox";
    combosettings.ControlStyle.CssClass = "editor";
    combosettings.CallbackRouteValues = new { Controller = "DocumentType", Action = "MinistryDocumentTypeComboBox" };
    combosettings.Properties.CallbackPageSize = 15;
    combosettings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
    combosettings.Properties.TextField = "Code";
    combosettings.Properties.ValueType = typeof(Guid);
    combosettings.Properties.ValueField = "Oid";
    combosettings.Properties.DropDownButton.Visible = true;
    combosettings.Properties.Columns.Add("Code", Resources.Code, 40);
    combosettings.Properties.Columns.Add("Title", Resources.Title, 100);
    combosettings.Properties.Columns.Add("Description", Resources.Description, 100);

    combosettings.Properties.DropDownStyle = DropDownStyle.DropDownList;
    combosettings.Properties.FilterMinLength = 0;
    combosettings.Properties.NullText = Resources.ComboBoxNote;
    combosettings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
    var button = new EditButton(" ");
    button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
    button.Image.AlternateText = Resources.Clear;
    combosettings.Properties.Buttons.Add(button);

}).BindList(ITS.Retail.WebClient.Controllers.DocumentTypeController.ItemsRequestedByFilterCondition,
ITS.Retail.WebClient.Controllers.DocumentTypeController.ItemRequestedByValue).BindList(ITS.Retail.WebClient.Controllers.DocumentTypeController.GetItemByValue(DataBinder.Eval(Model, "MinistryDocumentType!Key"))).Bind(DataBinder.Eval(Model, "MinistryDocumentType!Key")).GetHtml()
