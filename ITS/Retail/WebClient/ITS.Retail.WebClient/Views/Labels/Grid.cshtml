@using ITS.Retail.ResourcesLib;
@using System.Web.UI.WebControls;

@Html.DevExpress().GridView(settings =>
{

    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    settings.AccessibilityCompliant = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.HtmlRowPrepared = (object sender, ASPxGridViewTableRowEventArgs e) =>
    {
        if (e.RowType == GridViewRowType.Data)
        {
            e.Row.Attributes.Remove("oncontextmenu");
        }
    };
    settings.Name = "grdLabels";

    settings.CallbackRouteValues = new { Controller = "Labels", Action = "Grid", editMode = true };
    settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

    settings.CommandColumn.ShowSelectCheckbox = true;

    settings.ClientSideEvents.SelectionChanged = "LabelsSelectionChanged";
    settings.ClientSideEvents.BeginCallback = "LabelsGridOnBeginCallback";
    settings.CommandColumn.CellStyle.CssClass = "firstCollumn";

    settings.CommandColumn.Width = 25;
    settings.CommandColumn.CellStyle.HorizontalAlign = HorizontalAlign.Center;
    settings.CommandColumn.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;

    settings.Columns.Add(column =>
    {
        column.FieldName = "Oid";
        column.Visible = false;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "Item.Code";
        col.Caption = Resources.Code;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.SortOrder = DevExpress.Data.ColumnSortOrder.Ascending;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "Item.Name";
        col.Caption = Resources.Item;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "RetailValue";
        col.Caption = Resources.NewPrice;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.PropertiesEdit.DisplayFormatString = BaseController.OwnerApplicationSettings.formatCurrencyString;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
    });


    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "OldRetailValue";
        col.Caption = Resources.OldPrice;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.PropertiesEdit.DisplayFormatString = BaseController.OwnerApplicationSettings.formatCurrencyString;
        col.CellStyle.HorizontalAlign = HorizontalAlign.Right;
    });


    /*settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "TimeValueValidFromDate";
        col.Caption = Resources.TimeValueValidFromDate;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "TimeValueValidUntilDate";
        col.Caption = Resources.TimeValueValidUntilDate;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });*/


    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "ValueChangedOnDate";
        col.Caption = Resources.PriceUpdatedOn;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "TimeValueChangedOnDate";
        col.Caption = Resources.TimeValueUpdatedOn;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "UpdatedOn";
        col.Caption = Resources.PriceCatalogDetailUpdatedOn;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.FieldName = "Item.UpdatedOn";
        col.Caption = Resources.ItemUpdatedOn;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.Caption = Resources.LabelPrinted;
        col.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy HH:mm:ss";
        col.FieldName = "LabelPrintedOnDate";

    });


    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsBehavior.EnableRowHotTrack = true;
    settings.Width = Unit.Percentage(100);
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsPopup.EditForm.Height = Unit.Percentage(80);
    settings.SettingsPopup.EditForm.Width = Unit.Percentage(60);
    settings.SettingsPopup.EditForm.Modal = true;
    settings.SettingsPopup.EditForm.ShowHeader = true;
    settings.StylesPopup.EditForm.Header.Font.Bold = true;
    settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.SettingsText.PopupEditFormCaption = Resources.PriceInfo;

    settings.SettingsBehavior.ConfirmDelete = true;
    settings.CommandColumn.Visible = true;
    settings.KeyboardSupport = false;
    settings.SettingsPager.PageSize = 20;
    settings.SettingsCookies.Enabled = false;
    settings.SettingsCookies.StoreColumnsVisiblePosition = true;
    settings.SettingsCookies.StoreColumnsWidth = true;
    settings.SettingsCookies.StoreFiltering = false;
    settings.SettingsCookies.StorePaging = true;
    settings.Settings.ShowTitlePanel = true;
    settings.SettingsText.Title = Resources.Labels;
    settings.ClientSideEvents.EndCallback = "LabelsGridEndCallback";
    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;
    settings.Styles.Header.HorizontalAlign = HorizontalAlign.Center;

    settings.SettingsPager.EnableAdaptivity = true;
    settings.SettingsPager.Position = PagerPosition.TopAndBottom;

    settings.CustomJSProperties += (object sender, ASPxGridViewClientJSPropertiesEventArgs e) =>
    {
        e.Properties.Add("cp_ValuesToSelect", ViewBag.ValuesToSelect);
        e.Properties.Add("cp_ValuesToDeselect", ViewBag.ValuesToDeselect);
    };

}).Bind(Model).GetHtml()