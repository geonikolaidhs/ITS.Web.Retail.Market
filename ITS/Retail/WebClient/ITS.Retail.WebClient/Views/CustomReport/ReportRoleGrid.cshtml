@using ITS.Retail.ResourcesLib;
		      
@Html.DevExpress().GridView(settings =>
{
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    
    settings.AccessibilityCompliant = true;


        settings.Name = "grdReportRole";
        settings.Columns.Add(column =>
        {
            column.Caption = "#";
            column.SetDataItemTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<a href='javascript:;' onclick=\"" + settings.Name + ".SetFocusedRowIndex('" + c.ItemIndex.ToString() + "');" + settings.Name + ".DeleteRow('" + c.ItemIndex.ToString() + "');\" title=\"" + Resources.Delete + "\"><img src='" + Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]) + "' alt=\"" + Resources.Delete + "\" /></a>"
                );

            });
            column.SetHeaderTemplateContent(c =>
            {
                ViewContext.Writer.Write(
                    "<a href='javascript:;' onclick=\"" + settings.Name + ".AddNewRow();\"><img src='" + Url.Content("~/Content/img/plus.png?ver=" + ViewData["ApplicationVersionNumber"]) + "' alt=\"" + Resources.New + "\" /></a>"
                );
            });

            column.Settings.AllowDragDrop = DefaultBoolean.False;
            column.Settings.AllowSort = DefaultBoolean.False;
            column.Width = 90;
        });
        settings.CallbackRouteValues = new { Controller = "CustomReport", Action = "ReportRoleGrid"};
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "CustomReport", Action = "ReportRoleInlineAdd" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "CustomReport", Action = "ReportRoleInlineDelete" };
        //settings.ClientSideEvents.BeginCallback = "grdReportRoleBeginCallback";
        //settings.ClientSideEvents.EndCallback = "grdReportRoleEndCallback";
        //settings.SettingsCookies.CookiesID = "grdReportRole";
    


    settings.Columns.Add(col =>
    {
        col.FieldName = "Role.Description";
        col.Caption = Resources.Description;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });
    
    
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsBehavior.EnableRowHotTrack = true;
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true; 
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto; 
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
    settings.SettingsPopup.EditForm.Height = System.Web.UI.WebControls.Unit.Percentage(80);
    settings.SettingsPopup.EditForm.Width = System.Web.UI.WebControls.Unit.Percentage(40);
    settings.SettingsPopup.EditForm.Modal = true;
    settings.SettingsPopup.EditForm.ShowHeader = true;
    settings.StylesPopup.EditForm.Header.Font.Bold = true;
    settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
    settings.SettingsText.PopupEditFormCaption = Resources.BarcodeInfo;
    settings.SettingsBehavior.ConfirmDelete = true;

    settings.KeyboardSupport = false;
    settings.SettingsPager.PageSize = 5;
    settings.SettingsCookies.Enabled = false;
    
    settings.SettingsCookies.StoreColumnsVisiblePosition = true;
    settings.SettingsCookies.StoreColumnsWidth = true;
    settings.SettingsCookies.StoreFiltering = false;
    settings.SettingsCookies.StorePaging = true;
    settings.Settings.ShowTitlePanel = true;
    settings.SettingsText.Title = Resources.Role;
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.TopAndBottom;
    settings.SettingsText.PopupEditFormCaption = Resources.Role;
    settings.SetEditFormTemplateContent(editContent =>
    {

        var item = @ViewBag.CurrentItem != null ? @ViewBag.CurrentItem : editContent.DataItem;

        ViewContext.Writer.Write("<div class='ValidationContainer'>");

        /*Header banner*/
        HeaderOptions headerOptions = new HeaderOptions("");
        headerOptions.SaveButton.Name = "btnReportRoleUpdate";
        headerOptions.SaveButton.OnClick = "function(s, e){ValidateForm(s,e," + settings.Name + ");}";
        headerOptions.CancelButton.Name = "btnReportRoleCancel";
        headerOptions.CancelButton.OnClick = "function(s, e){ " + settings.Name + ".CancelEdit(); }";
        headerOptions.ViewType = eViewType.PopUp;
        HtmlGenerator.CreateViewHeader(Html, ViewData, headerOptions, true);
        /*End of header banner*/

        ViewContext.Writer.Write("<table><tr><td>");
        Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label required_field";
                edtSettings.Text = Resources.Role + ":";
            }
        )
        .Render();

        ViewContext.Writer.Write("</td><td>");
        
        Html.DevExpress().ComboBox(
           edtSettings =>
           {
               edtSettings.Name = "Role!Key";
               edtSettings.ControlStyle.CssClass = "editor";
               edtSettings.Properties.TextField = "Description";
               edtSettings.Properties.ValueField = "Oid";
               edtSettings.Properties.ValueType = typeof(Guid);
               edtSettings.ShowModelErrors = true;
               edtSettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
               edtSettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS; 
           }
       )
       .BindList(ViewBag.Roles)
	   .Bind( DataBinder.Eval(item, "Role!Key")).Render();

        ViewContext.Writer.Write("</td></tr></table>");

        ViewContext.Writer.Write("</div>");

    });

    settings.SettingsPager.EnableAdaptivity = true;
    //settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;

    settings.ClientLayout += (sndr, evt) =>
    {
        User user = (User)ViewBag.CurrentUser;
        if (user != null)
        {
            if (evt.LayoutMode == ClientLayoutMode.Loading)
            {
                GridSettings sets = user.GridSettings.FirstOrDefault(x => x.GridName == settings.Name);
                if (sets != null)
                {
                    evt.LayoutData = sets.GridLayout;
                }
            }
            else
            {
                BaseController.UpdateUserGridSettings(user.Oid, settings.Name, evt.LayoutData);
            }
        }
    };


}).Bind(Model).GetHtml()
