@using ITS.Retail.ResourcesLib;
@using System.Drawing;
@Html.DevExpress().GridView(settings =>
{
	settings.Name = "grdCustomReport";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
	settings.AccessibilityCompliant = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.ClientSideEvents.ContextMenu = "CustomizationWindowBtn_Click";
    settings.ClientSideEvents.BeginCallback = "OnBeginCallback";
    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    
	settings.HtmlRowPrepared = (object sender, ASPxGridViewTableRowEventArgs e) =>
	{
		if (e.RowType == GridViewRowType.Data)
			e.Row.Attributes.Remove("oncontextmenu");
	};
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
	settings.SettingsBehavior.EnableRowHotTrack = true;

    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.CallbackRouteValues = new { Controller = "CustomReport", Action = "Grid" };
    settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;

    settings.SettingsPopup.EditForm.Modal = true;
    settings.SettingsPopup.EditForm.Width = System.Web.UI.WebControls.Unit.Percentage(40);
    settings.SettingsPopup.EditForm.Height = System.Web.UI.WebControls.Unit.Percentage(40);
    settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
    settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
    if ((bool)ViewData["TableCanUpdate"])
    {
        settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "CustomReport", Action = "Update" };
    }
    if ((bool)ViewData["TableCanDelete"])
    {
        settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "CustomReport", Action = "Delete" };
    }
    if ((bool)ViewData["TableCanInsert"])
    {
        settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "CustomReport", Action = "Add" };
    }

    settings.SettingsBehavior.ConfirmDelete = true;
    settings.KeyboardSupport = false;
    settings.SettingsCookies.Enabled = false;
    settings.SettingsCookies.StoreColumnsVisiblePosition = true;
    settings.SettingsCookies.StoreColumnsWidth = true;
    settings.SettingsCookies.StoreFiltering = false;
    settings.SettingsCookies.StorePaging = true;
    settings.Settings.ShowTitlePanel = true;
    settings.SettingsText.Title = Resources.CustomReports;
    
    

    settings.CommandColumn.Visible = true;
    settings.CommandColumn.Width = 60;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.CommandColumn.ShowNewButton = false;
    settings.CommandColumn.ShowUpdateButton = false;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowEditButton = false;
    settings.CommandColumn.ShowClearFilterButton= true;
    settings.ClientSideEvents.SelectionChanged = "SelectionChanged";
    settings.ClientSideEvents.EndCallback = "grdOnEndCalback";

    settings.CommandColumn.Width = 50;
    settings.CommandColumn.CellStyle.CssClass = "firstCollumn";
    settings.CommandColumn.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.CommandColumn.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
	settings.Columns.Add(col =>
	{
		col.FieldName = "Code";
		col.Caption = Resources.Code;
		col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
		col.HeaderStyle.Wrap = DefaultBoolean.True;
	});
    
    settings.Columns.Add(col =>
    {
        col.FieldName = "Title";
        col.Caption = Resources.Title;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    
    settings.Columns.Add(col =>
	{
		col.FieldName = "Description";
		col.Caption = Resources.Description;
		col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
		col.HeaderStyle.Wrap = DefaultBoolean.True;
	});

    settings.Columns.Add(col =>
    {
        col.FieldName = "FileName";
        col.Caption = Resources.FileName;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "ReportCategory.Description";
        col.Caption = Resources.ReportCategory;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "ReportType";
        col.Caption = Resources.Type;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "ObjectType";
        col.Caption = Resources.ObjectType;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });

    settings.SettingsPager.EnableAdaptivity = true;
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.TopAndBottom;
    settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

    settings.ClientLayout += (sndr, evt) =>
    {
        User user = (User)ViewBag.CurrentUser;
        if (user != null)
        {
            if (evt.LayoutMode == ClientLayoutMode.Loading)
            {
                GridSettings sets = user.GridSettings.FirstOrDefault(x => x.GridName == settings.Name);
                if (sets != null)
                {
                    evt.LayoutData = sets.GridLayout;
                }
            }
            else
            {
                BaseController.UpdateUserGridSettings(user.Oid, settings.Name, evt.LayoutData);
            }
        }
    };
    
}).Bind(Model).GetHtml()
