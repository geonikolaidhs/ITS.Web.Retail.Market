@using ITS.Retail.ResourcesLib;
@{    
    ViewBag.ExtraCSSfiles.Add(Url.Content("~/Content/css/User.css?v=" + ViewData["ApplicationVersionNumber"]));
}
@Html.DevExpress().GridView(settings =>
{
    settings.Name = "grdUsers";
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsBehavior.EnableRowHotTrack = true;
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.ShowFilterRow = true;
    settings.Settings.ShowFilterRowMenu = true;
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto;
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowGroupPanel = true;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.CallbackRouteValues = new { Controller = "User", Action = "Grid" };
    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "User", Action = "InlineEditingDeletePartial" };
    settings.SettingsBehavior.ConfirmDelete = true;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.ShowSelectCheckbox = true;
    settings.CommandColumn.ShowNewButton= false;
    settings.CommandColumn.ShowUpdateButton = false;
    settings.CommandColumn.ShowDeleteButton = false;
    settings.CommandColumn.ShowEditButton = false;
    settings.CommandColumn.ShowClearFilterButton = true;
    settings.KeyboardSupport = false;
    settings.SettingsPager.PageSize = 30;
    settings.Settings.ShowTitlePanel = true;
    settings.SettingsText.Title = Resources.Users;
    settings.ClientSideEvents.BeginCallback = "UsersGridOnBeginCallback";
    settings.ClientSideEvents.EndCallback = "onEndCallback";
    settings.ClientSideEvents.SelectionChanged = "SelectionChanged";

    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;
    settings.Styles.Header.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;

    settings.SettingsCookies.StoreFiltering = false;
    settings.SettingsPager.EnableAdaptivity = true;
    settings.SettingsPager.Position = System.Web.UI.WebControls.PagerPosition.TopAndBottom;

    settings.SettingsEditing.Mode = GridViewEditingMode.Inline; settings.ClientSideEvents.ContextMenu = "CustomizationWindowBtn_Click";

    settings.HtmlRowPrepared = (object sender, ASPxGridViewTableRowEventArgs e) =>
    {
        if (e.RowType == GridViewRowType.Data)
            e.Row.Attributes.Remove("oncontextmenu");
    };

    settings.CommandColumn.Width = 50;
    settings.CommandColumn.CellStyle.CssClass = "firstCollumn";
    settings.CommandColumn.CellStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.CommandColumn.HeaderStyle.HorizontalAlign = System.Web.UI.WebControls.HorizontalAlign.Center;
    settings.CommandColumn.SelectAllCheckboxMode = GridViewSelectAllCheckBoxMode.AllPages;

    settings.ClientSideEvents.EndCallback = "grdOnEndCalback";

    settings.ClientLayout += (sndr, evt) =>
    {
        User user = (User)ViewBag.CurrentUser;
        if (user != null)
        {
            if (evt.LayoutMode == ClientLayoutMode.Loading)
            {
                GridSettings sets = user.GridSettings.FirstOrDefault(x => x.GridName == settings.Name);
                if (sets != null)
                {
                    evt.LayoutData = sets.GridLayout;
                }
            }
            else
            {
                BaseController.UpdateUserGridSettings(user.Oid, settings.Name, evt.LayoutData);
            }
        }
    };

    settings.Columns.Add(col =>
    {
        col.FieldName = "FullName";
        col.Caption = Resources.FullName;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "UserName";
        col.Caption = Resources.UserName;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "Role.Description";
        column.Caption = Resources.Role;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.ColumnType = MVCxGridViewColumnType.ComboBox;
        ComboBoxProperties comboBoxProperties = column.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.DataSource = ViewBag.RoleComboBox;
        comboBoxProperties.TextField = "Description";
        comboBoxProperties.ValueField = "Oid";
        comboBoxProperties.ValueType = typeof(Guid);
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "AssociatedCustomers";
        col.Caption = Resources.Customer;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "AssociatedSuppliers";
        col.Caption = Resources.Supplier;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    //settings.Columns.Add(col =>
    //{
    //    col.FieldName = "TaxCode";
    //    col.Caption = Resources.TaxCode;
    //    col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //    col.HeaderStyle.Wrap = DefaultBoolean.True;
    //});

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsActive";
        column.Caption = Resources.IsActive;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        var checkBoxProperties = column.PropertiesEdit as CheckBoxProperties;
        checkBoxProperties.ValueChecked = true;
        checkBoxProperties.ValueGrayed = false;
        checkBoxProperties.ValueUnchecked = false;
        checkBoxProperties.ValueType = typeof(bool);
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsCentralStore";
        column.Caption = Resources.IsCentralStore;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        var checkBoxProperties = column.PropertiesEdit as CheckBoxProperties;
        checkBoxProperties.ValueChecked = true;
        checkBoxProperties.ValueGrayed = false;
        checkBoxProperties.ValueUnchecked = false;
        checkBoxProperties.ValueType = typeof(bool);
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "CentralStore.Code";
        column.Caption = Resources.CentralStore;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.Visible = false;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsPOSUser";
        column.Caption = Resources.IsPOSUser;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        var checkBoxProperties = column.PropertiesEdit as CheckBoxProperties;
        checkBoxProperties.ValueChecked = true;
        checkBoxProperties.ValueGrayed = false;
        checkBoxProperties.ValueUnchecked = false;
        checkBoxProperties.ValueType = typeof(bool);
        column.Visible = true;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "POSUserName";
        column.Caption = Resources.POSUserName;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.Visible = true;
    });

    settings.Columns.Add(column =>
    {
        column.FieldName = "IsApproved";
        column.Caption = Resources.IsApproved;
        column.ColumnType = MVCxGridViewColumnType.CheckBox;
        column.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        column.HeaderStyle.Wrap = DefaultBoolean.True;
        column.Visible = true;
    });


}).Bind(Model).GetHtml()
