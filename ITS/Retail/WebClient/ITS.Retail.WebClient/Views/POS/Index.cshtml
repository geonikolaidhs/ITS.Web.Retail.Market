@using ITS.Retail.ResourcesLib;
@using ITS.Retail.Platform.Enumerations;
@section HeaderScriptsAndStyles {
    <script src="@Url.Content("~/Scripts/scripts/POS.js?ver="+ViewData["ApplicationVersionNumber"])" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/scripts/EditPOS.js?ver=" + ViewData["ApplicationVersionNumber"])" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/scripts/Resources_" + ViewData["CurrentCulture"] + ".js?ver=" + ViewData["ApplicationVersionNumber"])" type="text/javascript"></script>
    <link href="@Url.Content("~/Content/css/Settings.css?v=" + ViewData["ApplicationVersionNumber"])" rel="stylesheet" type="text/css" />
}

@section DialogCallbackPanelSection {
    @Html.Partial("DialogCallbackPanel")
}

@Html.Partial("../Shared/PopupEditCallbackPanel")


@{
    ViewBag.Title = Resources.Terminals;
}

@Html.DevExpress().RoundPanel(settings =>
{
    
    settings.Name = "FilterPanel";
    settings.ControlStyle.CssClass = "FilterPanel";
    settings.HeaderText = Resources.SearchFilters;
    settings.SetContent(() =>
    {

        ViewContext.Writer.Write("<table><tr><td>");

        Html.RenderPartial("FilterButtons");
        ViewContext.Writer.Write("<label for=\"fid_I\">ID:</label>");
        
        @Html.DevExpress().SpinEdit(textsettings =>
        {
            textsettings.Properties.AllowNull = false;
            textsettings.Properties.NumberType = SpinEditNumberType.Integer;
            textsettings.Name = "fid";
            textsettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            textsettings.ControlStyle.CssClass = "search_filter";
        }).GetHtml();

        ViewContext.Writer.Write("</td><td>");

        ViewContext.Writer.Write("<label for=\"fname_I\">"+Resources.Description+":"+"</label>");
       
        @Html.DevExpress().TextBox(textsettings =>
        {
            textsettings.Name = "fname";
            textsettings.Text = "";
            textsettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            textsettings.ControlStyle.CssClass = "search_filter";
        }).GetHtml();
        
        
        ViewContext.Writer.Write("</td><td>");

        ViewContext.Writer.Write("<label for=\"fIPAddress_I\">"+Resources.IPAddress + ":"+"</label>");
        
        @Html.DevExpress().TextBox(deSettings =>
        {
            deSettings.Name = "fIPAddress";
            deSettings.Text = "";
            deSettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            deSettings.ControlStyle.CssClass = "search_filter";
        }).GetHtml();
        
        ViewContext.Writer.Write("</td></tr><tr><td>");

        ViewDataDictionary customViewData = new ViewDataDictionary(ViewData);
        customViewData["IsFilter"] = true;

        ViewContext.Writer.Write("<label for=\"fcustomer_I\">" + Resources.Customer + ":" + "</label>");        
        
        customViewData["FilterMode"] = true;
        @Html.RenderPartial("CustomersComboBox", customViewData);
        
        ViewContext.Writer.Write("</td><td>");
		
        ViewContext.Writer.Write("<label for=\"fFiscalDevice_I\">"+ Resources.FiscalDevice + ":"+"</label>");

        Html.DevExpress().ComboBox(combosettings =>
		{
            combosettings.Name = "fFiscalDevice";
            combosettings.ControlStyle.CssClass = "search_filter";

            combosettings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
            var button = new EditButton(" ");
            button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
            button.Image.AlternateText = Resources.Clear;
            combosettings.Properties.Buttons.Add(button);
		}).BindList(Enum.GetValues(typeof(eFiscalDevice))).GetHtml();

        ViewContext.Writer.Write("</td></tr><tr><td></table>");
        @Html.DevExpress().Button(settings2 =>
        {
            settings2.Name = "btnSearch";
            settings2.Text = Resources.Search;
            settings2.UseSubmitBehavior = true;
            settings2.ClientSideEvents.Click = "SearchPOS";
        }).GetHtml();

        @Html.DevExpress().Button(settings2 =>
        {
            settings2.Name = "btnCreatePOSDatabase";
            settings2.Text = Resources.CreatePOSDatabase;
            settings2.UseSubmitBehavior = true;
            settings2.ClientSideEvents.Click = "CreatePOSDatabase";
        }).GetHtml();            
    });
}).GetHtml()
@Html.Action("MassivelyCreatePOS")



@Html.Partial("Grid")