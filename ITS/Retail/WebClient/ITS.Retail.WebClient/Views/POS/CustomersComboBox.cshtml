@using ITS.Retail.WebClient.Controllers;
@using ITS.Retail.ResourcesLib;
@{ComboBoxExtension cmb = Html.DevExpress().ComboBox(cmb_settings =>
  {
	  cmb_settings.Name = ViewData["IsFilter"] != null && Boolean.Parse(ViewData["IsFilter"].ToString()) ? "fcustomer" : "Customer";
	  cmb_settings.Properties.TextField = "Customer";
	  cmb_settings.Properties.ValueField = "Oid";
	  cmb_settings.Properties.ValueType = typeof(Guid);
	  cmb_settings.CallbackRouteValues = new { Controller = "POS", Action = "CustomersComboBox", IsFilter = ViewData["IsFilter"] != null && Boolean.Parse(ViewData["IsFilter"].ToString()) };
	  cmb_settings.Properties.Columns.Add("CompanyName", ITS.Retail.ResourcesLib.Resources.CompanyName, 90);
	  cmb_settings.Properties.Columns.Add("Trader.TaxCode", ITS.Retail.ResourcesLib.Resources.TaxCode, 90);
	  cmb_settings.Properties.Columns.Add("Code", ITS.Retail.ResourcesLib.Resources.Code, 90);
	  cmb_settings.ShowModelErrors = !(ViewData["Isfilter"] != null && Boolean.Parse(ViewData["IsFilter"].ToString()));
	  cmb_settings.Properties.CallbackPageSize = 15;
	  cmb_settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
	  cmb_settings.Properties.DropDownWidth = 350;
      if (ViewData["FilterMode"] == null || (bool)ViewData["FilterMode"] == false)
      {
          cmb_settings.ShowModelErrors = true;
          cmb_settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
          cmb_settings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;  
      }
	  cmb_settings.ShowModelErrors = ViewData["IsFilter"] == null || !Boolean.Parse(ViewData["IsFilter"].ToString());
      cmb_settings.ControlStyle.CssClass = "search_filter";

      cmb_settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
      cmb_settings.Properties.FilterMinLength = 0;
      cmb_settings.Properties.NullText = Resources.ComboBoxNote;
      cmb_settings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
      var button = new EditButton(" ");
      button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
      button.Image.AlternateText = Resources.Clear;
      cmb_settings.Properties.Buttons.Add(button);
  });
  if(ViewData["IsFilter"] != null && Boolean.Parse(ViewData["IsFilter"].ToString()))
{
    cmb.BindList(POSController.CustomersRequestedByFilterCondition, POSController.ObjectRequestedByValue<Customer>).GetHtml();
}
else
{
    cmb.BindList(POSController.CustomersRequestedByFilterCondition, POSController.ObjectRequestedByValue<Customer>).BindList(POSController.GetObjectByValue<Customer>(DataBinder.Eval(Model, "DefaultCustomer!Key"))).Bind(DataBinder.Eval(Model, "DefaultCustomer!Key")).GetHtml();
}

  
}