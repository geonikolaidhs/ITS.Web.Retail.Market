@model DevExpress.Xpo.XPCollection<PosOposReportSettings>
@using ITS.Retail.ResourcesLib;
@using ITS.Retail.Model;
@using ITS.Retail.WebClient.Extensions;
@using System.Linq;
@using DevExpress.Xpo;
@using DevExpress.Data.Filtering;

@{
    GridViewSettings settings = HtmlGridExtension.GetDefaultSettings(ViewContext,
                                                                     typeof(PosOposReportSettings),
                                                                     typeof(ITS.Retail.WebClient.Controllers.POSController),
                                                                     "grdPOSOposReportSettinsg",
                                                                     generateColumns: false
                                                                     );


    settings.SettingsText.Title = Resources.PosOposReportSettings;
    settings.KeyFieldName = "Oid";
    settings.Settings.ShowGroupPanel = true;
    settings.SettingsBehavior.AllowFocusedRow = true;
    settings.SettingsCookies.Enabled = false;
    settings.SettingsPager.EnableAdaptivity = true;
    settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Auto;
    settings.Settings.GridLines = System.Web.UI.WebControls.GridLines.Vertical;
    settings.SettingsBehavior.EnableCustomizationWindow = false;
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.Disabled;
    settings.SettingsSearchPanel.Visible = false;
    settings.SettingsSearchPanel.HighlightResults = true;
    settings.SettingsSearchPanel.ShowApplyButton = true;
    settings.SettingsSearchPanel.ShowClearButton = true;
    settings.Settings.ShowFilterRow = false;
    settings.Settings.ShowFilterRowMenu = false;
    settings.CommandColumn.Visible = false;
    settings.CommandColumn.ShowClearFilterButton = false;
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.SettingsPager.PageSizeItemSettings.Visible = true;
    settings.SettingsPager.PageSizeItemSettings.Items = new string[] { "10", "20", "50" };
    settings.AccessibilityCompliant = true;
    settings.SettingsText.PopupEditFormCaption = Resources.PosOposReportSettings;

    settings.PreRender = (sender, e) =>
    {
        ((MVCxGridView)sender).FocusedRowIndex = 0;
    };

    settings.Columns.Add(column =>
    {
        column.Caption = "#";
        column.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<a href='javascript:;' onclick=\"" + settings.Name + ".SetFocusedRowIndex('" + c.ItemIndex.ToString() + "');" + settings.Name + ".StartEditRow('" + c.ItemIndex.ToString() + "');\" title=\"" + Resources.Edit + "\"><img src='" + Url.Content("~/Content/img/edit.png?ver=" + ViewData["ApplicationVersionNumber"]) + "' alt=\"" + Resources.Edit + "\" /></a>" +
                "<a href='javascript:;' onclick=\"" + settings.Name + ".SetFocusedRowIndex('" + c.ItemIndex.ToString() + "');" + settings.Name + ".DeleteRow('" + c.ItemIndex.ToString() + "');\" title=\"" + Resources.Delete + "\"><img src='" + Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]) + "' alt=\"" + Resources.Delete + "\" /></a>"
            );
        });
        column.SetHeaderTemplateContent(c =>
        {
            ViewContext.Writer.Write(
                "<a href='javascript:;' onclick=\"" + settings.Name + ".AddNewRow();\"><img src='" + Url.Content("~/Content/img/plus.png?ver=" + ViewData["ApplicationVersionNumber"]) + "' alt=\"" + Resources.Add + "\" /></a>"
            );
        });

        column.Settings.AllowDragDrop = DefaultBoolean.False;
        column.Settings.AllowSort = DefaultBoolean.False;
        column.Width = 90;
    });
    settings.CallbackRouteValues = new { Controller = "POS", Action = "POSOposReportSettingsGrid", editMode = true };
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "POS", Action = "AddPOSOposReportSettings" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "POS", Action = "UpdatePOSOposReportSettings" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "POS", Action = "DeletePOSOposReportSettings" };


    settings.Columns.Add(col =>
    {
        col.FieldName = "PrintFormat.Description";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Caption = Resources.POSPrintFormat;
        col.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    });


    settings.Columns.Add(col =>
    {
        col.FieldName = "Printer.Name";
        col.HeaderStyle.Wrap = DefaultBoolean.True;
        col.Caption = Resources.Printer;
        col.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    });




    settings.SetEditFormTemplateContent(editContent =>
    {
        var item = @ViewBag.CurrentItem != null ? @ViewBag.CurrentItem : editContent.DataItem;

        ViewContext.Writer.Write("<div class='ValidationContainer'>");
/*Header banner*/
        HeaderOptions headerOptions = new HeaderOptions("");
        headerOptions.SaveButton.Name = "buttonPOSOposReportSettingsUpdate";
        headerOptions.SaveButton.OnClick = "function(s, e){ValidateForm(s,e," + settings.Name + ");}";
        headerOptions.CancelButton.Name = "buttonPOSOposReportSettingsCancel";
        headerOptions.CancelButton.OnClick = "function(s, e){ " + settings.Name + ".CancelEdit(); }";
        headerOptions.ViewType = eViewType.PopUp;
        HtmlGenerator.CreateViewHeader(Html, ViewData, headerOptions, true);
/*End of header banner*/

        POS pos = Session["UnsavedPOS"] as POS;

        ViewContext.Writer.Write("<table class=\"headerTable\"><tr><td>");




        ViewContext.Writer.Write("</td></tr><tr><td>");

        Html.DevExpress().ComboBox(comboboxSettings =>
        {
            comboboxSettings.Name = "SelectedPosReport";
            comboboxSettings.Properties.Caption = Resources.POS_REPORTS;
            comboboxSettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            comboboxSettings.Properties.ValueType = typeof(Guid);
            comboboxSettings.Properties.ValueField = "Oid";
            comboboxSettings.Properties.TextField = "Description";
            comboboxSettings.ClientVisible = true;
        }).BindList(ViewBag.PosReports).Bind(DataBinder.Eval(item, "PrintFormat!Key")).Render();





        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().ComboBox(comboboxSettings =>
        {
            comboboxSettings.Name = "SelectedPrinter";
            comboboxSettings.Properties.Caption = Resources.Printer;
            comboboxSettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            comboboxSettings.Properties.ValueType = typeof(Guid);
            comboboxSettings.Properties.ValueField = "Oid";
            comboboxSettings.Properties.TextField = "Name";
        }).BindList(pos.TerminalDeviceAssociations.Where(association => (association.TerminalDevice as POSDevice).DeviceSettings.DeviceType == DeviceType.Printer).Select(association => association.TerminalDevice)).Bind(DataBinder.Eval(item, "Printer!Key")).Render();

        ViewContext.Writer.Write("</td></tr></table>");
        ViewContext.Writer.Write("</div>");
    });
}
@Html.DevExpress().GridView(settings).Bind(Model).GetHtml()


