@model ITS.Retail.Model.DataFileRecordHeader
@{    
    ViewBag.ExtraCSSfiles.Add(Url.Content("~/Content/css/User.css?v=" + ViewData["ApplicationVersionNumber"]));
}
@using ITS.Retail.ResourcesLib;
    @section HeaderScriptsAndStyles {
        <script src="@Url.Content("~/Scripts/scripts/Resources_"+ViewData["CurrentCulture"]+".js?ver=" + ViewData["ApplicationVersionNumber"])" type="text/javascript"></script>      
        <script src="@Url.Content("~/Scripts/scripts/EditDataFileRecordHeader.js?ver=" + ViewData["ApplicationVersionNumber"])" type="text/javascript"></script>
    }
@{
    ViewBag.ShowNavigation = false;
    ViewBag.Title = ViewBag.Mode;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*@Html.Partial("../Notification/NotifyUser")*@

@using (Html.BeginForm("Save", "DataFileRecordHeader", FormMethod.Post))
{
    @Html.DevExpress().RoundPanel(settings =>
    {
        settings.Name = "EditBridgeSettings";
        settings.ShowHeader = false;
        settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
        settings.SetContent(() =>
        {
            ViewContext.Writer.Write(Html.Hidden("DataFileRecordHeaderID", ViewData["DataFileRecordHeaderID"].ToString()));

            ViewContext.Writer.Write("<div class='ValidationContainer  background-light-grey '>");
            /*Header banner*/
            HeaderOptions headerOptions = new HeaderOptions(Resources.BridgeSettings);
            HtmlGenerator.CreateViewHeader(Html, ViewData, headerOptions, true);
            /*End of header banner*/

            ViewContext.Writer.Write("<table class=\"headerTable  margin-0-border-light-gray margin-0-auto\"><tr><td>");
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label required_field";
                edtSettings.Text = Resources.Company + ":";
                edtSettings.AssociatedControlName = "OwnersComboBox";
            }
            ).Render();
        
            ViewData["IsRequiredOwnersComboBox"] = true;
            Html.RenderPartial("../Base/OwnersComboBoxPartial");
        
            ViewContext.Writer.Write("</td><td>");
        
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label required_field";
                edtSettings.Text = Resources.HeaderCode +":";
                edtSettings.AssociatedControlName = "HeaderCode";
            }
            ).Render();

            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "HeaderCode";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.ShowModelErrors = true;
                edtSettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
                edtSettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS; 
            }).Bind(DataBinder.Eval(Model, "HeaderCode")).Render();

            ViewContext.Writer.Write("</td><td>");


            Html.DevExpress().Label(lblsettings =>
            {
                lblsettings.ControlStyle.CssClass = "label required_field";
                lblsettings.Text = Resources.EntityName + ":";
            }).Render();

            Html.RenderPartial("EntityComboBox");

            ViewContext.Writer.Write("</td></tr><tr><td>");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.Length + ":";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "Length";
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 99999;
                edtSettings.Properties.MaxLength = 99999;
                edtSettings.Number = 0;
            }).Bind(DataBinder.Eval(Model, "Length")).Render();

            ViewContext.Writer.Write("</td><td class=\"vertical-align-td-middle\">");

            Html.DevExpress().CheckBox(edtSettings =>
            {
                edtSettings.Text = Resources.IsCharacterDelimited;
                edtSettings.Name = "IsCharacterDelimitedCheckbox";
                edtSettings.ControlStyle.CssClass = "editor";
                edtSettings.Properties.ValueChecked = true;
                edtSettings.Properties.ValueGrayed = false;
                edtSettings.Properties.ValueUnchecked = false;
                edtSettings.Properties.ValueType = typeof(bool);
            }).Bind(DataBinder.Eval(Model, "IsTabDelimited")).Render();

            ViewContext.Writer.Write("</td><td class=\"vertical-align-td-top\">");

            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.Characters + ":";
            }).Render();
        
            Html.DevExpress().TextBox(edtSettings =>
            {
                edtSettings.Name = "TabDelimitedString";
            }).Bind(DataBinder.Eval(Model, "TabDelimitedString")).Render();

            ViewContext.Writer.Write("</td></tr><tr><td class=\"vertical-align-td-top\">");
        
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.KeyProperty + ":";
            }).Render();
        
            Session["CurrentKeyProperty"] = DataBinder.Eval(Model, "KeyProperty!Key");
            Html.RenderAction("KeyPropertyComboBox");

            ViewContext.Writer.Write("</td><td>");
        
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.ImportOrder + ":";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "Order";
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 99999;
                edtSettings.Properties.MaxLength = 99999;
                edtSettings.Number = 0;
            }).Bind(DataBinder.Eval(Model, "Order")).Render();
        
            ViewContext.Writer.Write("</td><td>");
        
            Html.DevExpress().Label(edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.Position + ":";
            }).Render();

            Html.DevExpress().SpinEdit(edtSettings =>
            {
                edtSettings.Name = "Position";
                edtSettings.Properties.NumberType = SpinEditNumberType.Integer;
                edtSettings.ShowModelErrors = false;
                edtSettings.Properties.MinValue = 0;
                edtSettings.Properties.MaxValue = 99999;
                edtSettings.Properties.MaxLength = 99999;
                edtSettings.Number = 0;
            }).Bind(DataBinder.Eval(Model, "Position")).Render();

            ViewContext.Writer.Write("</td></tr></table>");
            ViewContext.Writer.Write("</div>");
            Html.RenderPartial("DataFileRecordDetailGrid", Model.DataFileRecordDetails);
        });
    }).GetHtml();
}