@using ITS.Retail.ResourcesLib;
@using ITS.Retail.Model;
@model IEnumerable<DocumentHeader>
@using System.Web.Optimization;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Scripts.Render("~/bundles/editdocumentextras.js")

@using(Ajax.BeginForm(actionName: "Grid", controllerName: "Document", ajaxOptions: new AjaxOptions()
{
    HttpMethod = "POST",
    InsertionMode = InsertionMode.Replace,
    UpdateTargetId = "DocumentGridDiv"
}))
{
@Html.DevExpress().RoundPanel(settings =>
{
    settings.Name = "FilterPanel";
    settings.ControlStyle.CssClass = "FilterPanel relative";
    settings.HeaderText = Resources.SearchCriteria;
    settings.SetContent(() =>
    {
        Html.RenderPartial("FilterButtons");
        ViewContext.Writer.Write("<table class=\"filter_panel\">");

        //Start of new line
        ViewContext.Writer.Write("<tr>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"Fromdate_I\" >" + Resources.Date + " " + Resources.From + "</label>");

        DateTime from = new DateTime();
        DateTime to = new DateTime();
        DateTime now = DateTime.Now;
        from = DateTime.Now.Date.AddMilliseconds(1);
        to = from.AddDays(1).AddMilliseconds(-1);//DateTime.Now.Date.AddSeconds(-1).AddDays(1);
        int constSize = 145;
        @Html.DevExpress().DateEdit(datesettings =>
        {
            datesettings.Name = "Fromdate";
            datesettings.ControlStyle.CssClass = "search_filter";
            datesettings.Properties.EditFormat = EditFormat.Date;
            datesettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            /// TODO
            datesettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);
        }).Bind(from).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"FromDateTime_I\" >" + Resources.TimePeriod + " " + Resources.From + "</label>");

        @Html.DevExpress().TimeEdit(datesettings =>
        {
            datesettings.Name = "FromDateTime";
            datesettings.ControlStyle.CssClass = "search_filter";
            datesettings.Properties.EditFormat = EditFormat.Time;
            datesettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            datesettings.Properties.EditFormatString =
            datesettings.Properties.DisplayFormatString = "HH:mm:ss";
            /// TODO
            datesettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);
            
        }).Bind(from).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"todate_I\" >" + Resources.Date + " " + Resources.To + "</label>");

        @Html.DevExpress().DateEdit(datesettings =>
        {
            datesettings.Name = "todate";
            datesettings.ControlStyle.CssClass = "editor search_filter";
            datesettings.Properties.EditFormat = EditFormat.Date;
            datesettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            /// TODO
            datesettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);
            
        }).Bind(to).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"TodateTime_I\" >" + Resources.TimePeriod + " " + Resources.To + "</label>");

        @Html.DevExpress().TimeEdit(datesettings =>
        {
            datesettings.Name = "ToDateTime";
            datesettings.ControlStyle.CssClass = "search_filter";
            datesettings.Properties.EditFormat = EditFormat.Time;
            datesettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            datesettings.Properties.EditFormatString =
            datesettings.Properties.DisplayFormatString = "HH:mm:ss";
            /// TODO
            datesettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);           
        }).Bind(to).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"seriescombo_I\" >" + Resources.DocumentSeries + "</label>");


        @Html.DevExpress().ComboBox(combosettings =>
        {
            combosettings.Name = "seriescombo";
            combosettings.Properties.TextField = "Description";
            combosettings.Properties.ValueField = "Oid";
            combosettings.Properties.ValueType = typeof(Guid);
            combosettings.ControlStyle.CssClass = "search_filter";
            combosettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";

            combosettings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
            EditButton button = new EditButton(" ");
            button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
            button.Image.AlternateText = Resources.Clear;
            combosettings.Properties.Buttons.Add(button);
            /// TODO
            combosettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);
        }).BindList(ViewBag.DocumentSeriesComboBox).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        ViewContext.Writer.Write("<label for=\"TransformationStatus_I\" >" + Resources.HasBeenTransformed + "</label>");


        @Html.DevExpress().ComboBox(csettings =>
        {
            csettings.Name = "TransformationStatus";
            csettings.ControlStyle.CssClass = "search_filter";
            csettings.Properties.ValueType = typeof(ITS.Retail.Platform.Enumerations.eTransformationStatus);
            csettings.Properties.ValueField = "Key";
            csettings.Properties.TextField = "Value";
            csettings.Properties.ClientSideEvents.KeyPress = "Component.OnKeyPressFilters";
            /// TODO
            csettings.Width = System.Web.UI.WebControls.Unit.Pixel(constSize);

            csettings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
            EditButton button = new EditButton(" ");
            button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
            button.Image.AlternateText = Resources.Clear;
            csettings.Properties.Buttons.Add(button);
            if (Request["Proforma"] != null)
            {
                csettings.SelectedIndex = 1;
            }
        }).BindList(ITS.Retail.Platform.Enumerations.ExtensionMethods.ToDictionary<ITS.Retail.Platform.Enumerations.eTransformationStatus>()).Bind(ITS.Retail.Platform.Enumerations.eTransformationStatus.NOT_TRANSFORMED).GetHtml();

        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");
        ViewContext.Writer.Write("<label for=\"DocumentCustomerFilter_I\" >" + Resources.Customer + "</label>");
        @Html.RenderPartial("DocumentCustomerFilter");
        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("<td>");

        Html.DevExpress().Button(btnsettings =>
        {
            btnsettings.Name = "btnSearch";
            btnsettings.Text = Resources.Search;
            btnsettings.ClientEnabled = true;
            btnsettings.UseSubmitBehavior = true;
        }).GetHtml();
        ViewContext.Writer.Write("</td>");

        ViewContext.Writer.Write("</tr></table>");


    });
}).GetHtml()



@Html.Hidden("Mode", Request["Mode"])
    @Html.Hidden("Proforma", ViewData["Proforma"])
}
@{
    ViewContext.Writer.Write("<div class='buttonGridContainer'>");

    Html.DevExpress().Button(s =>
    {
        s.Name = "btTranformation";
        s.ControlStyle.CssClass = "btnTransform";
        s.Text = "";
        s.ControlStyle.BackgroundImage.ImageUrl = Url.Content("~/Content/img/fast-transform.jpg?v=" + ViewData["ApplicationVersionNumber"]);
        s.ToolTip = Resources.FastTransform;
        s.ClientSideEvents.Click = "TransformSelectedDocumentFast";
    }).GetHtml();
    
    Html.DevExpress().Button(s =>
    {
        s.Name = "btShowCustomizationWindow";
        s.ControlStyle.CssClass = "btCustomizationWindow";
        s.Text = "";
        s.ControlStyle.BackgroundImage.ImageUrl = Url.Content("~/Content/img/ColumnCustomization.png?v=" + ViewData["ApplicationVersionNumber"]);
        s.ToolTip = Resources.CustomizeColumns;
        s.ClientSideEvents.Click = "function(s,e){UpdateCustomizationWindowVisibility(grdDocument)}";
    }).GetHtml();

    ViewContext.Writer.Write("</div>");
}


@Html.Partial("../Document/TransformationPopup")

@Html.Partial("../Shared/PopupViewCallbackPanel")

@Html.Partial("../Shared/PopupEditCallbackPanel")


<div id="DocumentGridDiv">
    @Html.Partial("Grid", Model)
</div>