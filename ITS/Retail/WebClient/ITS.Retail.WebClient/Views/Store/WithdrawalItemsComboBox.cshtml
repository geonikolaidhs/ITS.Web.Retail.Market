@using ITS.Retail.WebClient.Controllers;
@{ComboBoxExtension cmb = Html.DevExpress().ComboBox(cmb_settings =>
  {
	  cmb_settings.Name = "WithdrawalItemComboBox";
	  cmb_settings.Properties.TextField = "Item";
	  cmb_settings.Properties.ValueField = "Oid";
	  cmb_settings.Properties.ValueType = typeof(Guid);
      cmb_settings.CallbackRouteValues = new { Controller = "Store", Action = "WithdrawalItemsComboBox" };
	  cmb_settings.Properties.Columns.Add("Code", ITS.Retail.ResourcesLib.Resources.Code, 20);
      cmb_settings.Properties.Columns.Add("Description", ITS.Retail.ResourcesLib.Resources.ItemName, 120);	  
	  cmb_settings.ShowModelErrors = true;  
	  cmb_settings.Properties.CallbackPageSize = 15;
	  cmb_settings.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;

      cmb_settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
      cmb_settings.Properties.FilterMinLength = 2;
      cmb_settings.Properties.NullText = Resources.ComboBoxNote;
      cmb_settings.Properties.ClientSideEvents.ButtonClick = "clearComboBox";
      var button = new EditButton(" ");
      button.Image.Url = Url.Content("~/Content/img/del.png?ver=" + ViewData["ApplicationVersionNumber"]);
      button.Image.AlternateText = Resources.Clear;
      cmb_settings.Properties.Buttons.Add(button);  
  });
  cmb.BindList(StoreController.DepositItemsRequestedByFilterCondition, StoreController.DepositItemRequestedByValue)
 .BindList(StoreController.GetDepositItemByValue(DataBinder.Eval(Model, "WithdrawalItem!Key")))
 .Bind(DataBinder.Eval(Model, "WithdrawalItem!Key")).GetHtml();
 }

