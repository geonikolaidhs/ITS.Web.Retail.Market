@using ITS.Retail.ResourcesLib;
@{
    string title = Resources.LeafletInfo;
    if (ViewData["ID"] != null) {
        PopupControlSettings popUpSettings = ITS.Retail.WebClient.Extensions.PopUpControlExtension.GetDefaultSettings("LoadViewPopup");
        popUpSettings.AccessibilityCompliant = true;
        popUpSettings.ClientSideEvents.Init = "function (s,e) { " + popUpSettings.Name + ".Show(); }";
        popUpSettings.CallbackRouteValues = new { Controller = "Leaflet", Action = "LoadViewPopup", ID = ViewData["ID"] };
        popUpSettings.HeaderText = title;
        popUpSettings.ControlStyle.CssClass = "isInviewMode";
        popUpSettings.SetContent(() =>
        {
            ViewContext.Writer.Write("<div class=\"col-xs-3 col-md-2 col\">");
            ViewContext.Writer.Write("<img  class=\"img-responsive max-height-225 center-block\" alt='' id='imgViewLeafletImage" + ViewData["ID"].ToString().Replace('-', '_') + "' src='" + Url.Action("ShowImageId", "Leaflet", new { Id = ViewData["ID"], stamp = ViewData["UpdatedOnTicks"] }) + "'  />");
            ViewContext.Writer.Write("</div>");

            ViewContext.Writer.Write("<div class=\"background-light-grey\"><table class=\"headerTable margin-0-border-light-gray margin-0-auto-20\" ><tr><td>");

            Html.DevExpress().Label(
                edtSettings =>
                {
                    edtSettings.ControlStyle.CssClass = "label";
                    edtSettings.Text = Resources.Code + ":";
                    edtSettings.AssociatedControlName = "Code";
                }
            )
            .Render();
            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                    edtSettings.Name = "Code";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                }
            )
            .Bind(ViewData["Code"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td><td>");

            Html.DevExpress().Label(
            edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.Description;
            }).Render();


            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "Description";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                }
            )
            .Bind(ViewData["Description"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td><td>");

            ViewContext.Writer.Write("</td></tr><tr><td>");

            Html.DevExpress().Label(
            edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.StartDate + ":";
            }
            )
            .Render();

            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "StartDate";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                }
            )
            .Bind(ViewData["StartDate"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td><td>");

            Html.DevExpress().Label(
                edtSettings =>
                {
                    edtSettings.ControlStyle.CssClass = "label";
                    edtSettings.Text = Resources.EndDate + ":";
                }
                )
                .Render();

            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "EndDate";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                }
            )
            .Bind(ViewData["EndDate"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td><td>");

            Html.DevExpress().CheckBox(chb_settings =>
            {
                chb_settings.Name = "IsActive";
                chb_settings.Text = Resources.IsActive;
                chb_settings.ControlStyle.CssClass = "editor padding-top-25";
                chb_settings.Properties.ValueChecked = true;
                chb_settings.Properties.ValueGrayed = false;
                chb_settings.Properties.ValueUnchecked = false;
                chb_settings.Properties.ValueType = typeof(bool);

            }).Bind(ViewData["IsActive"] ?? "").Render();

            ViewContext.Writer.Write("</td></tr><tr><td>");

            Html.DevExpress().Label(
            edtSettings =>
            {
                edtSettings.ControlStyle.CssClass = "label";
                edtSettings.Text = Resources.StartTimePerDay + ":";
            }
            )
            .Render();

            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "StartTime";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                    edtSettings.Properties.DisplayFormatString = "HH:mm:ss";
                }
            )
            .Bind(ViewData["StartTime"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td><td>");

            Html.DevExpress().Label(
                edtSettings =>
                {
                    edtSettings.ControlStyle.CssClass = "label";
                    edtSettings.Text = Resources.EndTimePerDay + ":";
                }
                )
                .Render();

            Html.DevExpress().TextBox(
                edtSettings =>
                {
                    edtSettings.Name = "EndTime";
                    edtSettings.ControlStyle.CssClass = "editor";
                    edtSettings.ReadOnly = true;
                    edtSettings.Properties.DisplayFormatString = "HH:mm:ss";
                }
            )
            .Bind(ViewData["EndTime"] ?? "")
            .Render();

            ViewContext.Writer.Write("</td></tr></table></div>");
            Html.DevExpress().PageControl(pcSettings =>
            {
                pcSettings.AccessibilityCompliant = false;
                pcSettings.Name = "pcFeatures";
                pcSettings.ActivateTabPageAction = ActivateTabPageAction.Click;
                pcSettings.TabAlign = TabAlign.Justify;
                pcSettings.TabPosition = TabPosition.Top;
                pcSettings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                pcSettings.EnableTabScrolling = true;
                pcSettings.EnableHotTrack = true;
                pcSettings.Styles.Content.BorderTop.BorderStyle = System.Web.UI.WebControls.BorderStyle.None;

                pcSettings.TabPages.Add(Resources.Items).SetContent(() =>
                {
                    Html.RenderAction("LeafletDetailGrid", "Leaflet", new { LeafletID = ViewData["ID"], editMode = false });
                });
                pcSettings.TabPages.Add(Resources.Stores).SetContent(() =>
                {
                    Html.RenderAction("LeafletStoreGrid", "Leaflet", new { LeafletID = ViewData["ID"], editMode = false });
                });

            }).Render();

        });


        Html.DevExpress().PopupControl(popUpSettings).GetHtml();
    }
}
