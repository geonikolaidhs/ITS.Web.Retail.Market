@model IEnumerable<ITS.Retail.Model.CouponMask>
@using ITS.Retail.ResourcesLib;
@{
    GridViewSettings settings = ITS.Retail.WebClient.Extensions.HtmlGridExtension.GetDefaultSettings(ViewContext,
                                                        typeof(CouponMask), typeof(CouponMaskController), "grdCouponMasks",
                                                        showAddIcon: false, generateColumns: false);

    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "CouponMask", Action = "InsertPartial" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "CouponMask", Action = "UpdatePartial" };
    settings.SettingsText.Title = Resources.CouponsMasks;
    settings.SettingsText.PopupEditFormCaption = Resources.CouponsMask;

    settings.Columns.Add(set =>
    {
        set.FieldName = "Prefix";
        set.Caption = Resources.Prefix;
    });
    settings.Columns.Add(set =>
    {
        set.FieldName = "Mask";
        set.Caption = Resources.Mask;
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "IsActiveFromDate";
        col.Caption = Resources.IsActiveFromDate;
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "IsActiveUntilDate";
        col.Caption = Resources.IsActiveUntilDate;
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "IsUnique";
        col.Caption = Resources.IsUnique;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.CheckBox;
        col.HeaderStyle.Wrap = DefaultBoolean.True;
    });


    settings.Columns.Add(col =>
    {
        col.FieldName = "DiscountType.Description";
        col.Caption = Resources.DiscountType;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "PaymentMethod.Description";
        col.Caption = Resources.PaymentMethod;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "CouponCategory.Description";
        col.Caption = Resources.CouponCategory;
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "CouponAppliesOn";
        col.Caption = Resources.CouponAppliesOn;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(((CouponAppliesOn)DataBinder.Eval(c.DataItem, "CouponAppliesOn")).ToLocalizedString());
        });
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "CouponAmountType";
        col.Caption = Resources.CouponAmountType;
        col.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(((CouponAmountType)DataBinder.Eval(c.DataItem, "CouponAmountType")).ToLocalizedString());
        });
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "CouponAmountIsAppliedAs";
        col.Caption = Resources.CouponAmountIsAppliedAs;
        col.SetDataItemTemplateContent(c =>
        {
            ViewContext.Writer.Write(((CouponAmountIsAppliedAs)DataBinder.Eval(c.DataItem, "CouponAmountIsAppliedAs")).ToLocalizedString());
        });
    });

    settings.ClientLayout += (sndr, evt) =>
    {
        User user = (User)ViewBag.CurrentUser;
        if (user != null)
        {
            if (evt.LayoutMode == ClientLayoutMode.Loading)
            {
                GridSettings sets = user.GridSettings.FirstOrDefault(x => x.GridName == settings.Name);
                if (sets != null)
                {
                    evt.LayoutData = sets.GridLayout;
                }
            }
            else
            {
                BaseController.UpdateUserGridSettings(user.Oid, settings.Name, evt.LayoutData);
            }
        }
    };

    settings.SetEditFormTemplateContent(editContent =>
    {
        var item = @ViewBag.CurrentItem != null ? @ViewBag.CurrentItem : editContent.DataItem;
        ViewContext.Writer.Write("<div class='ValidationContainer'>");
        /*Header banner*/
        HeaderOptions headerOptions = new HeaderOptions("");
        headerOptions.SaveButton.Name = "btnSaveCouponMask";
        headerOptions.SaveButton.OnClick = "function(s, e){ValidateForm(s,e," + settings.Name + ");}";
        headerOptions.CancelButton.Name = "btnCancel";
        headerOptions.CancelButton.OnClick = "function(s, e){ " + settings.Name + ".CancelEdit(); }";
        headerOptions.CancelButton.EncodeHtml = true;
        headerOptions.ViewType = eViewType.PopUp;
        HtmlGenerator.CreateViewHeader(Html, ViewData, headerOptions, true);
        /*End of header banner*/

        ViewContext.Writer.Write("<table><tr><td>");

        Html.DevExpress().TextBox(txtsettings =>
        {
            txtsettings.Properties.Caption = Resources.Prefix + ":";
            txtsettings.Properties.CaptionStyle.CssClass = "label";
            txtsettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            txtsettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            txtsettings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            txtsettings.Name = "Prefix";
            txtsettings.ControlStyle.CssClass = "editor";
            txtsettings.ShowModelErrors = true;
        }).Bind(DataBinder.Eval(item, "Prefix")).Render();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().TextBox(txtsettings =>
        {
            txtsettings.Properties.Caption = Resources.Mask + ":";
            txtsettings.Properties.CaptionStyle.CssClass = "label";
            txtsettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            txtsettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            txtsettings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            txtsettings.Name = "Mask";
            txtsettings.ControlStyle.CssClass = "editor";
            txtsettings.ShowModelErrors = true;
            txtsettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            txtsettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            txtsettings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            txtsettings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).Bind(DataBinder.Eval(item, "Mask")).Render();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().CheckBox(chk_settings =>
        {
            chk_settings.Name = "IsUnique";
            chk_settings.Text = Resources.IsUnique;
            chk_settings.ControlStyle.CssClass = "center-block margin-top-8";
            chk_settings.Properties.ValueChecked = true;
            chk_settings.Properties.ValueGrayed = false;
            chk_settings.Properties.ValueUnchecked = false;
            chk_settings.Properties.ValueType = typeof(bool);
        }).Bind(DataBinder.Eval(item, "IsUnique") ?? false).Render();

        ViewContext.Writer.Write("</td><td></tr>");

        ViewContext.Writer.Write("<tr><td>");
        Html.DevExpress().DateEdit(deSettings =>
        {
            deSettings.Properties.Caption = Resources.IsActiveFromDate;
            deSettings.Properties.EditFormat = EditFormat.Date;
            deSettings.Name = "IsActiveFromDate";
            deSettings.Properties.CaptionStyle.CssClass = "label";
            deSettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            deSettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            deSettings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            deSettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            deSettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            deSettings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            deSettings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).Bind(DataBinder.Eval(item, "IsActiveFromDate")).Render();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().DateEdit(deSettings =>
        {
            deSettings.Properties.Caption = Resources.IsActiveUntilDate;
            deSettings.Properties.EditFormat = EditFormat.Date;
            deSettings.Name = "IsActiveUntilDate";
            deSettings.Properties.CaptionStyle.CssClass = "label";
            deSettings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            deSettings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            deSettings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            deSettings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            deSettings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            deSettings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            deSettings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).Bind(DataBinder.Eval(item, "IsActiveUntilDate")).Render();

        ViewContext.Writer.Write("</td></tr><tr><td>");

        ViewContext.Writer.Write(string.Format("<label>{0}</label>",Resources.DiscountType));

        Html.RenderPartial("DiscountTypesCallbackPanel");

        ViewContext.Writer.Write("</td><td>");

        ViewContext.Writer.Write(string.Format("<label>{0}</label>", Resources.PaymentMethod));

        Html.RenderPartial("PaymentMethodsCallbackPanel");

        ViewContext.Writer.Write("</td><td>");

        ViewContext.Writer.Write(string.Format("<label>{0}</label>", Resources.CouponCategory));

        Html.RenderPartial("CouponCategoriesCallbackPanel");

        ViewContext.Writer.Write("</td><td></tr><tr><td>");

        Html.DevExpress().ComboBox(cmb_settings =>
        {
            cmb_settings.Properties.Caption = Resources.CouponAppliesOn;
            cmb_settings.Name = "CouponAppliesOn";
            cmb_settings.Properties.ValueType = typeof(CouponAppliesOn);
            cmb_settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            cmb_settings.Properties.ValueField = "Key";
            cmb_settings.Properties.TextField = "Value";
            cmb_settings.ShowModelErrors = true;
            cmb_settings.Properties.CaptionStyle.CssClass = "label";
            cmb_settings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            cmb_settings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            cmb_settings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            cmb_settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            cmb_settings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            cmb_settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            cmb_settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).BindList(Enum<CouponAppliesOn>.GetLocalizedDictionary()).Bind(DataBinder.Eval(item, "CouponAppliesOn")).Render();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().ComboBox(cmb_settings =>
        {
            cmb_settings.Properties.Caption = Resources.CouponAmountType;
            cmb_settings.Name = "CouponAmountType";
            cmb_settings.Properties.ValueType = typeof(CouponAmountType);
            cmb_settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            cmb_settings.Properties.ValueField = "Key";
            cmb_settings.Properties.TextField = "Value";
            cmb_settings.ShowModelErrors = true;
            cmb_settings.Properties.CaptionStyle.CssClass = "label";
            cmb_settings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            cmb_settings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            cmb_settings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            cmb_settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            cmb_settings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            cmb_settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            cmb_settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).BindList(Enum<CouponAmountType>.GetLocalizedDictionary()).Bind(DataBinder.Eval(item, "CouponAmountType")).Render();

        ViewContext.Writer.Write("</td><td>");

        Html.DevExpress().ComboBox(cmb_settings =>
        {
            cmb_settings.Properties.Caption = Resources.CouponAmountIsAppliedAs;
            cmb_settings.Name = "CouponAmountIsAppliedAs";
            cmb_settings.Properties.ValueType = typeof(CouponAmountIsAppliedAs);
            cmb_settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
            cmb_settings.Properties.ValueField = "Key";
            cmb_settings.Properties.TextField = "Value";
            cmb_settings.ShowModelErrors = true;
            cmb_settings.Properties.CaptionStyle.CssClass = "label";
            cmb_settings.Properties.CaptionSettings.VerticalAlign = EditorCaptionVerticalAlign.Middle;
            cmb_settings.Properties.CaptionSettings.Position = EditorCaptionPosition.Top;
            cmb_settings.Properties.CaptionSettings.HorizontalAlign = EditorCaptionHorizontalAlign.Left;
            cmb_settings.Properties.ValidationSettings.RequiredField.IsRequired = true;
            cmb_settings.Properties.ValidationSettings.RequiredField.ErrorText = Resources.PLEASE_FILL_ALL_REQUIRED_FIELDS;
            cmb_settings.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
            cmb_settings.Properties.ValidationSettings.ErrorTextPosition = ErrorTextPosition.Bottom;
        }).BindList(Enum<CouponAmountIsAppliedAs>.GetLocalizedDictionary()).Bind(DataBinder.Eval(item, "CouponAmountIsAppliedAs")).Render();

        ViewContext.Writer.Write("</td></tr><tr><td>");

        string remarks = string.Format(@"<table>
                                                <tr><th>{0}</th><th>{1}</th></tr>
                                                <tr><td>{2}</td><td>{3}</td></tr>
                                                <tr><td>{4}</td><td>{5}</td></tr>
                                                <tr><td>{6}</td><td>{7}</td></tr>
                                                <tr><td>{8}</td><td>{9}</td></tr>
                                        </table>",
                                        Resources.MaskCharacters,Resources.Result,
                                        ITS.Retail.Platform.Common.RetailConstants.CouponMaskSettings.COUPON_CODE_DIGIT, Resources.Code,
                                        ITS.Retail.Platform.Common.RetailConstants.CouponMaskSettings.VALUE_INTEGRAL_PART_DIGIT, Resources.VALUE_INTEGRAL_PART_DIGIT,
                                        ITS.Retail.Platform.Common.RetailConstants.CouponMaskSettings.VALUE_DECIMAL_PART_DIGIT, Resources.VALUE_DECIMAL_PART_DIGIT,
                                        ITS.Retail.Platform.Common.RetailConstants.CouponMaskSettings.UNUSED_DIGIT, Resources.Undefined
                                        );

        ViewContext.Writer.Write(remarks);

        ViewContext.Writer.Write("</td></tr></table>");
        ViewContext.Writer.Write("</div>");
    });

    Html.DevExpress().GridView(settings).Bind(Model).GetHtml();
}