@using ITS.Retail.ResourcesLib;
@using ITS.Retail.WebClient.Helpers;
@using ITS.Retail.WebClient.Extensions;
@model MobileTerminalViewModel

@{

    string title = Resources.MobileTerminal;
    if (ViewData["ID"] != null)
    {
        PopupControlSettings popUpSettings = ITS.Retail.WebClient.Extensions.PopUpControlExtension.GetDefaultSettings("LoadViewPopup");
        popUpSettings.AccessibilityCompliant = true;
        popUpSettings.ClientSideEvents.Init = "function (s,e) { " + popUpSettings.Name + ".Show(); }";
        popUpSettings.CallbackRouteValues = new { Controller = "MobileTerminal", Action = "LoadViewPopup", ID = ViewData["ID"]/*, Type = ViewData["Type"]*/ };
        popUpSettings.ControlStyle.CssClass = "isInviewMode";
        popUpSettings.ClientSideEvents.Closing = "HideOverflowOnBody";
        popUpSettings.ClientSideEvents.PopUp = "DisplayOverflowOnBody";
        popUpSettings.HeaderText = title;
        popUpSettings.ScrollBars = System.Web.UI.WebControls.ScrollBars.Auto;
        popUpSettings.AllowResize = false;
        popUpSettings.AllowDragging = false;
        popUpSettings.SetContent(() =>
        {
            Html.DevExpress().FormLayout(settings =>
            {
                settings.AlignItemCaptionsInAllGroups = true;
                settings.Name = "MobileTerminalForm";
                settings.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
                settings.SettingsItemCaptions.VerticalAlign = FormLayoutVerticalAlign.Top;
                settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.NotSet;
                settings.RequiredMarkDisplayMode = DevExpress.Web.RequiredMarkMode.RequiredOnly;
                settings.ShowItemCaptionColon = false;
                settings.Enabled = false;

                MVCxFormLayoutGroup<MobileTerminalViewModel> group = settings.Items.AddGroupItem(groupSettings =>
                {
                    groupSettings.Caption = Resources.MobileTerminal;
                    groupSettings.ColCount = 4;
                });

                
                
                group.Items.Add(mobile => mobile.Name, FormInstances.TextBoxItem(false));
                group.Items.Add(mobile => mobile.ID, FormInstances.TextBoxItem(false));
                group.Items.Add(mobile => mobile.IPAddress, FormInstances.TextBoxItem(false));

                group.Items.Add(mobile => mobile.Remarks, FormInstances.MemoItem(false, captionLocation: LayoutItemCaptionLocation.Top, caption: Resources.Remarks));

            }).GetHtml();
        });


        Html.DevExpress().PopupControl(popUpSettings).GetHtml();
    }
}