@model SupplierImportFileRecordHeaderViewModel
@using ITS.Retail.WebClient.Extensions;
@using ITS.Retail.Common;

@Html.Hidden("SupplierImportFileRecordHeaderOid", Model.Oid)

@Html.DevExpress().FormLayout(settings =>
{
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Name = "SupplierImportFileRecordHeaderEditForm";
    settings.ControlStyle.CssClass = "item-center-div";
    settings.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
    settings.SettingsItemCaptions.VerticalAlign = FormLayoutVerticalAlign.Middle;
    settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.NotSet;
    settings.RequiredMarkDisplayMode = DevExpress.Web.RequiredMarkMode.None;
    settings.ShowItemCaptionColon = false;
    settings.ColCount = 5;
    settings.Items.Add(model => model.HeaderCode, FormInstances.TextBoxItem(true));
    settings.Items.Add(model => model.EntityName, FormInstances.ComboBoxItem(Html, Model.EntityName, true, ViewData["EntityNames"] as IEnumerable<string>, valueField: "", textField: "", valueType: typeof(string)));
    settings.Items.Add(model => model.Position, FormInstances.SpinEditItem(true));
    settings.Items.Add(model => model.Length, FormInstances.SpinEditItem(true));
    settings.Items.Add(model => model.IsTabDelimited, FormInstances.CheckBoxItem(true));
    settings.Items.Add(model => model.TabDelimitedString, FormInstances.TextBoxItem(true));
    settings.Items.Add(model => model.Order, FormInstances.SpinEditItem(true));
    settings.Items.Add(model => model.DocumentType, FormInstances.ComboBoxItem(Html, Model.DocumentType, true, ViewData["DocumentTypes"] as IEnumerable<DocumentType>, valueType: typeof(Guid)));
    settings.Items.Add(model => model.DocumentStatus, FormInstances.ComboBoxItem(Html, Model.DocumentStatus, true, ViewData["DocumentStatuses"] as IEnumerable<DocumentStatus>, valueType: typeof(Guid)));

    settings.Items.Add(model => model.MasterSupplierImportFileRecordHeader, FormInstances.ComboBoxItem(Html, Model.MasterSupplierImportFileRecordHeader, true, ViewData["SupplierImportFileRecordHeaders"] as IEnumerable<SupplierImportFileRecordHeaderViewModel>, valueField: "Oid", textField: "HeaderCode", valueType: typeof(Guid)));
    
}).GetHtml()
