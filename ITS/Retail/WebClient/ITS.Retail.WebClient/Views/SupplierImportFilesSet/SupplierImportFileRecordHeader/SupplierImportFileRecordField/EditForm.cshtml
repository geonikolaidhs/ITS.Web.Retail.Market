@model SupplierImportFileRecordFieldViewModel
@using ITS.Retail.WebClient.Extensions;
@using ITS.Retail.Common;

@Html.Hidden("SupplierImportFileRecordFieldOid", Model.Oid)

@Html.DevExpress().FormLayout(settings =>
{
    settings.AlignItemCaptionsInAllGroups = true;
    settings.Name = "SupplierImportFileRecordFieldEditForm";
    settings.ControlStyle.CssClass = "item-center-div";
    settings.SettingsItemCaptions.HorizontalAlign = FormLayoutHorizontalAlign.Left;
    settings.SettingsItemCaptions.VerticalAlign = FormLayoutVerticalAlign.Middle;
    settings.SettingsItemCaptions.Location = LayoutItemCaptionLocation.NotSet;
    settings.RequiredMarkDisplayMode = DevExpress.Web.RequiredMarkMode.None;
    settings.ShowItemCaptionColon = false;
    settings.ColCount = 5;
    settings.Items.Add(model => model.PropertyName, FormInstances.ComboBoxItem(Html, Model.PropertyName, true, ViewData["PropertyNames"] as IEnumerable<string>, valueField: "", textField: "", valueType: typeof(string)));
    settings.Items.Add(model => model.Position, FormInstances.SpinEditItem(true, name: "FieldPosition")); //
    settings.Items.Add(model => model.Length, FormInstances.SpinEditItem(true, name: "FieldLength"));//
    settings.Items.Add(model => model.Padding, FormInstances.CheckBoxItem(true));
    settings.Items.Add(model => model.PaddingCharacter, FormInstances.TextBoxItem(true));
    settings.Items.Add(model => model.Trim, FormInstances.CheckBoxItem(true));
    settings.Items.Add(model => model.DefaultValue, FormInstances.TextBoxItem(true));
    settings.Items.Add(model => model.ConstantValue, FormInstances.TextBoxItem(true));
    settings.Items.Add(model => model.Multiplier, FormInstances.SpinEditItem(true));
    settings.Items.Add(model => model.SupplierImportMappingHeader, FormInstances.ComboBoxItem(Html, Model.SupplierImportMappingHeader, true, ViewData["SupplierImportMappingHeaders"] as IEnumerable<SupplierImportMappingHeaderViewModel>, valueField: "Oid", textField: "Description", valueType: typeof(Guid)));
}).GetHtml()
