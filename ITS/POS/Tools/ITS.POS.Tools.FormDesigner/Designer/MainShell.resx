<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="mainMenu1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAADAwMAAABMTExTU1NHR0cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMAAABSUlJZWVlZ
        WVlaWlpOTk4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFBZWVlZWVlZWVlZWVlZWVlQUFAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABP
        T09ZWVlZWVlZWVlZWVlZWVlZWVlZWVlRUVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQQzRbWVdZWVlZWVlZWVlZWVlZWVlZWVlZWVlZ
        WVlSUlIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANadoOaNYeX68zWolJVWNZVU9bWVZaWVlZWVlZWVlZWVlZWVlTU1MAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSwP8AAAAwX5oXac4HbekIbOgJbeYHbusKat0b
        YLQxW45HVmhYVE9bWVVaWVlZWVlUVFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAOZdEsW5VFVmtWU1BIXXcxZKIaaMcIbegHbegJbOYIbesJa+IZYbouXJRDV25WVFBW
        U1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAObOAGbeoJbOYIbekIbOcU
        Y8MpXJtBV3FVU1BLXHA1Y5weZ8IKbOUHbekJbOYIbekIbOYwXphWVVQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABGRkdbWFRNXG43YZQiZroNa98HbeoJbOYIbegHbeoSZMgnXaE+WHdUU1FO
        W2k4YpYhZ70KbOQ9X4hZWVlWVlYMDAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBQUFYWFhZWVlZ
        WVlZWVlbWVZdWFJQW2k6YY8lZrUQa9oGbesJbOcJbegHbesQZc4jXqY7WH1SU1VZWVpZWVlZWVlWVlYY
        GBgAAAAAAAAAAAAAAAAAAAAAAAAAAAA/Pz9YWFhZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlaWVddWFNT
        W2Q+YIooZa8TatUGbesIbOcJbecNa95dWFJZWVlZWVlZWVlXV1ciIiIAAAAAAAAAAAAAAAB1dXU4ODhY
        WFhZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlaWVddWFNWWl9AX4QrZKouY6Ja
        WVdZWVlZWVlZWVlZWVlYWFgoKCj///8AAADOzs44ODhYWFhZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZ
        WVlZWVlsRFhqQVVRVlRVW1hZWlpZWVlZWVlZWVlaWVhbWVZZWVlZWVlZWVlZWVlZWVlZWVlYWFgrKysA
        AAAAAABXV1dZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlXW1mlGl/QAGfOAGauDl6NJVlvPVZT
        VFNUXFhZWlpZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlSUlIAAAAAAABZWVlZWVlZWVlZWVlZWVlZWVlZ
        WVlZWVlZWVlZWVlZWVlXW1mFOF6rGmLJAmXRAGfOAGbQAGfQAGazC1+SIVpzOVZVUVNTXFdZW1pZWVlZ
        WVlZWVlZWVlUVFQAAAAAAABYWFhZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVliTlidGlt3N1dV
        UlNgUFiGOF+mHmLFBWbRAGfOAGbPAGfSAGe4CGCXHlt4N1dYT1NSW1dYWVg5OTkAAABbW1tNTU1ZWVlZ
        WVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVmENFzQAGfPAGfSAGfABGKdGlt8M1dZTlNaUlaAPF6iImLB
        CWXSAGfOAGbPAGfSAGe9BmFjGj4AAAAAAAAAAABjY2NISEhTVFdWWFxZWVpZWVlZWVlZWVlZWVlZWVlZ
        WVleVVp8P12bJmC7DmTRAGfPAGbOAGfSAGfEAmOiFlyAL1heSlRWVVV8QF2eJWG9DGS5AFsAAAAAAAAA
        AAAAAAAAAAAAAADGkQC7jxaSeC1pX0ZOUVlVV1xZWVpZWVlZWVlZWVlZWVlYWllUXVhaWVl3QlyXKWC2
        EWTQAGfPAGbOAGbSAGfJAGSmEl2FK1kYXDoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADlqQLxsQD3tADt
        rQDBkxKYeypuY0NQUVdVV1xZWVpZWVlZWVlZWVlZWVlYWllVXFlXWllzRVyTLWCyFGPOAGbOAGa+AF4A
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoqwXipwjwsAD1swDysQD2tADxsADHlg+efid0Zj9R
        UlVTVlxZWVpZWVlZWVlZWVlZWVlZWVlVXFlVW1iDKVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD/wAAAAABNT1VtZEydgTPHmBnurwL2tADysQD1swD0sgDOmgyEcDlZWVlZWVlZWVlZWVlZWVlZ
        WVlNTU0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/yAfVnwqrhh9/bDlU
        U1NmYE+WfTbBlRzqrAT6tgCHcz1ZWVlZWVlZWVlZWVlZWVlOTk4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/0ADisifwsQX0sgD4tQDdpAaxiRuGcDVXVlBiXU9eXFZZWVlZ
        WVlZWVlZWVlQUFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/ygDhsCPcpArZow73tAD0sgDzsgD4tQDTngxUVl1ZWVlZWVlZWVlRUVEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0rwAAAABLUF9cW1iEckCtiSjW
        oRC3jyFXWFpZWVlZWVlRUVEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAABLS0sAAABXV1dZWVlYWFpTVlxVV1tZWVlZWVlTU1MAAAAGBgYAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4
        ODgAAABXV1dZWVlZWVlZWVlZWVlTU1MAAAAKCgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnJycAAABXV1dZWVlZWVlUVFQAAAAK
        CgoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAqKioAAAAAAAAAAAAAAAAWFhYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD///////7////8P///+B////AP///gB///gAP//4AB//4AAP/+AAB//AAAP/gA
        AB/wAAAP4AAAB8AAAAOAAAABgAAAAYAAAAPAAAAH4AAAD/AAAB/4AAA//AAAf/4AAP//AAH//4AD///A
        B///4A////gf///8P////n///////w==
</value>
  </data>
</root>