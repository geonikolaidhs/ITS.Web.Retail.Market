@Html.DevExpress().GridView(settings =>
{
    settings.AccessibilityCompliant = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.HtmlRowPrepared = (object sender, ASPxGridViewTableRowEventArgs e) =>
    {
        if (e.RowType == GridViewRowType.Data)
            e.Row.Attributes.Remove("oncontextmenu");
    };
    
    settings.Name = "grdRule"+ViewData["ApplicationInfoGuid"];
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsBehavior.EnableRowHotTrack = true;

    settings.Columns.Add(col =>
    {
        col.FieldName = "Description";
        col.Caption = "Description";
        col.Width = 100;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.TextBox;
    });
     
    settings.Columns.Add(col =>
    {
        col.FieldName = "Entity";
        col.Caption = "Entity";
        col.Width = 100;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.TextBox;
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "Field";
        col.Caption = "Field";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.TextBox;
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "Operator";
        col.Caption = "Operator";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.DropDownEdit;
        col.SetEditItemTemplateContent(c=>{
            Html.DevExpress().ComboBox(cmb_settings=>{
                cmb_settings.Name = "operator_combobox";
                //cmb_settings.Properties.DataSource = Enum.GetNames(typeof(DevExpress.Data.Filtering.BinaryOperatorType));
            }).BindList(Enum.GetValues(typeof(DevExpress.Data.Filtering.BinaryOperatorType))).GetHtml();
        });
    });
    //settings.Columns.Add(col =>
    //{
    //    col.FieldName = "Operator";
    //    col.Caption = "Operator";
    //    col.Width = 250;
    //    col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    //    col.ColumnType = MVCxGridViewColumnType.ComboBox;
    //    var comboBoxProperties = col.PropertiesEdit as ComboBoxProperties;
    //    comboBoxProperties.DataSource = (ViewData["Operators"] as List<ITS.Licensing.Web.Controllers.RuleController.Operators>);
    //    comboBoxProperties.TextField = "name";
    //    comboBoxProperties.ValueField = "value";
    //    comboBoxProperties.ValueType = typeof(int);      
    //});
    settings.Columns.Add(col =>
    {
        col.FieldName = "Value";
        col.Caption = "Value";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.TextBox;
    });

         
  
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.ShowFilterRow = false; 
    settings.Settings.ShowFilterRowMenu = true; 
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto; 
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.CallbackRouteValues = new { Controller = "Rule", Action = "Grid", ApplicationInfoGuid = ViewData["ApplicationInfoGuid"] };
    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "Rule", Action = "Add", ApplicationInfoGuid = ViewData["ApplicationInfoGuid"]};
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "Rule", Action = "Update", ApplicationInfoGuid = ViewData["ApplicationInfoGuid"] };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "Rule", Action = "Delete", ApplicationInfoGuid = ViewData["ApplicationInfoGuid"] };
    settings.SettingsBehavior.ConfirmDelete = true;
    settings.KeyboardSupport = true;
    settings.SettingsPager.PageSize = 30;
    settings.SettingsCookies.Enabled = true;
    settings.SettingsCookies.CookiesID = "grdRule";
    settings.SettingsCookies.StoreColumnsVisiblePosition = true;
    settings.SettingsCookies.StoreColumnsWidth = true;
    settings.SettingsCookies.StoreFiltering = true;
    settings.SettingsCookies.StorePaging = true;
    settings.Settings.ShowTitlePanel = true;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.NewButton.Visible = true;
    settings.CommandColumn.UpdateButton.Visible = true;
    settings.CommandColumn.DeleteButton.Visible = true;
    settings.CommandColumn.EditButton.Visible = true;
}).Bind(Model).GetHtml()