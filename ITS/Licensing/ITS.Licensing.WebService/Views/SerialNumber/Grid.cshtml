@Html.DevExpress().GridView(settings =>
{
    settings.AccessibilityCompliant = true;
    settings.SettingsBehavior.EnableCustomizationWindow = true;
    settings.HtmlRowPrepared = (object sender, ASPxGridViewTableRowEventArgs e) =>
    {
        if (e.RowType == GridViewRowType.Data)
            e.Row.Attributes.Remove("oncontextmenu");
    };
    
    settings.Name = "grdSerialNumber";
    settings.SettingsBehavior.ColumnResizeMode = ColumnResizeMode.NextColumn;
    settings.SettingsBehavior.EnableRowHotTrack = true;

    settings.Columns.Add(col =>
    {
        col.FieldName = "Application!Key";
        col.Caption = "Application";
        col.Width = 200;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.Name = "ApplicationInfo";
        col.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = col.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.DataSource = ViewBag.Applications;
        comboBoxProperties.TextField = "Name";
        comboBoxProperties.ValueField = "Oid";
        comboBoxProperties.ValueType = typeof(Guid);                
    });

    settings.Columns.Add(col =>
    {
        col.FieldName = "Customer!Key";
        col.Caption = "Customer";
        col.Width = 200;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.ComboBox;
        var comboBoxProperties = col.PropertiesEdit as ComboBoxProperties;
        comboBoxProperties.DataSource = ViewBag.Customers;
        comboBoxProperties.TextField = "CompanyName";
        comboBoxProperties.ValueField = "Oid";
        comboBoxProperties.ValueType = typeof(Guid);
        
        
    });
        
    settings.Columns.Add(col =>
    {
        col.FieldName = "Number";
        col.Caption = "Serial Number";
        col.Width = 200;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ReadOnly = true;
        
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "NumberOfLicenses";
        col.Caption = "Number Of Licenses";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
    });

      

    settings.Columns.Add(col =>
    {
        col.FieldName = "StartDate";
        col.Caption = "Start Date";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.DateEdit;
       
    });
    settings.Columns.Add(col =>
    {
        col.FieldName = "FinalDate";
        col.Caption = "Final Date";
        col.Width = 250;
        col.Settings.AutoFilterCondition = AutoFilterCondition.Contains;
        col.ColumnType = MVCxGridViewColumnType.DateEdit;
        
    });

    settings.SettingsDetail.AllowOnlyOneMasterRowExpanded = true;
    settings.SettingsDetail.ShowDetailRow = true;

    settings.SetDetailRowTemplateContent(c =>
    {
        Html.DevExpress().PageControl(
               settings2 =>
               {
                   settings2.Name = "snFeatures";
                   settings2.ActivateTabPageAction = ActivateTabPageAction.Click;
                   settings2.TabAlign = TabAlign.Left;
                   settings2.TabPosition = TabPosition.Top;
                   settings2.Width = System.Web.UI.WebControls.Unit.Percentage(100);
                   //settings2.Height = 600;
                   settings2.TabPages.Add("Licenses").SetContent(() =>
                   {
                       Html.RenderAction("Grid", "License", new { serialNumberGuidStr = DataBinder.Eval(c.DataItem, "Oid").ToString() });
                   });

                   settings2.TabPages.Add("Application Users").SetContent(() =>
                   {
                       Html.RenderAction("Grid", "ApplicationUser", new { serialNumberGuidStr = DataBinder.Eval(c.DataItem, "Oid").ToString() });
                   });

                   settings2.TabPages.Add("User Rules").SetContent(() =>
                   {
                       Html.RenderAction("Grid", "UserRule", new { serialNumberGuidStr = DataBinder.Eval(c.DataItem, "Oid").ToString() });
                   });

                   settings2.TabPages.Add("Validation Rules").SetContent(() =>
                   {
                       Html.RenderAction("Grid", "ValidationRule", new { serialNumberGuidStr = DataBinder.Eval(c.DataItem, "Oid").ToString() });
                   });
               }).Render();
    });
    
  
    settings.Width = System.Web.UI.WebControls.Unit.Percentage(100);
    settings.Settings.ShowFilterRow = false; 
    settings.Settings.ShowFilterRowMenu = true; 
    settings.Settings.ShowFilterBar = GridViewStatusBarMode.Auto; 
    settings.Settings.ShowFooter = true;
    settings.Settings.ShowGroupPanel = false;
    settings.Settings.ShowHeaderFilterButton = true;
    settings.KeyFieldName = "Oid";
    settings.CallbackRouteValues = new { Controller = "SerialNumber", Action = "Grid" };
    settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
    settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "SerialNumber", Action = "Add" };
    settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "SerialNumber", Action = "Update" };
    settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "SerialNumber", Action = "Delete" };
    settings.SettingsBehavior.ConfirmDelete = true;
    settings.KeyboardSupport = true;
    settings.SettingsPager.PageSize = 15;
    settings.SettingsCookies.Enabled = true;
    settings.SettingsCookies.CookiesID = "grdSerialNumber";
    settings.SettingsCookies.StoreColumnsVisiblePosition = true;
    settings.SettingsCookies.StoreColumnsWidth = true;
    settings.SettingsCookies.StoreFiltering = true;
    settings.SettingsCookies.StorePaging = true;
    settings.Settings.ShowTitlePanel = true;
    settings.CommandColumn.Visible = true;
    settings.CommandColumn.NewButton.Visible = true;
    settings.CommandColumn.UpdateButton.Visible = true;
    settings.CommandColumn.DeleteButton.Visible = true;
    settings.CommandColumn.EditButton.Visible = true;

    settings.CustomColumnDisplayText = (object sender, ASPxGridViewColumnDisplayTextEventArgs e) =>     //TrimStart sta columns pou theloume
    {
            if (e.Column.FieldName == "Number" )
            {

                string s = e.Value as string;
                if (s == null) return;
                e.DisplayText = s.ToString().Substring(0, 5) + "-" + s.ToString().Substring(5, 5) + "-" + s.ToString().Substring(10, 5) + "-" + s.ToString().Substring(15, 5);
            }
        
    };

    settings.PreRender = (sender, e) =>
    {
        ((MVCxGridView)sender).DetailRows.ExpandRow(0);
    };
    
}).Bind(Model).GetHtml()