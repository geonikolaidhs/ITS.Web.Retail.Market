//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8689
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.8689.
// 
namespace ITS.Mobile.Updater.WRMMobileAtStore {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWRMMobileAtStore", Namespace="http://tempuri.org/")]
    public partial class WRMMobileAtStore : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public WRMMobileAtStore() {
            this.Url = "http://localhost/ITS.Retail.WebClient/WRMMobileAtStore.svc";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Product GetProduct(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string suppcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string priceCatalogPolicy, eDocumentType eDocumentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool eDocumentTypeSpecified) {
            object[] results = this.Invoke("GetProduct", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        suppcode,
                        compCode,
                        priceCatalogPolicy,
                        eDocumentType,
                        eDocumentTypeSpecified});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetProduct(int id, bool idSpecified, string ip, string code, string suppcode, string compCode, string priceCatalogPolicy, eDocumentType eDocumentType, bool eDocumentTypeSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetProduct", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        suppcode,
                        compCode,
                        priceCatalogPolicy,
                        eDocumentType,
                        eDocumentTypeSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Product EndGetProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetReceiptProduct", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Product GetReceiptProduct(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string suppcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string priceCatalogPolicy, eDocumentType eDocumentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool eDocumentTypeSpecified) {
            object[] results = this.Invoke("GetReceiptProduct", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        suppcode,
                        compCode,
                        priceCatalogPolicy,
                        eDocumentType,
                        eDocumentTypeSpecified});
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReceiptProduct(int id, bool idSpecified, string ip, string code, string suppcode, string compCode, string priceCatalogPolicy, eDocumentType eDocumentType, bool eDocumentTypeSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReceiptProduct", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        suppcode,
                        compCode,
                        priceCatalogPolicy,
                        eDocumentType,
                        eDocumentTypeSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public Product EndGetReceiptProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Product)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetOffers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
        public Offer[] GetOffers(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compCode) {
            object[] results = this.Invoke("GetOffers", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compCode});
            return ((Offer[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOffers(int id, bool idSpecified, string ip, string code, string compCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOffers", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public Offer[] EndGetOffers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Offer[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetSupplier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetSupplier(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchString) {
            object[] results = this.Invoke("GetSupplier", new object[] {
                        id,
                        idSpecified,
                        ip,
                        searchString});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSupplier(int id, bool idSpecified, string ip, string searchString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSupplier", new object[] {
                        id,
                        idSpecified,
                        ip,
                        searchString}, callback, asyncState);
        }
        
        /// <remarks/>
        public Customer EndGetSupplier(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetCustomer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomer(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string searchString) {
            object[] results = this.Invoke("GetCustomer", new object[] {
                        id,
                        idSpecified,
                        ip,
                        searchString});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetCustomer(int id, bool idSpecified, string ip, string searchString, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetCustomer", new object[] {
                        id,
                        idSpecified,
                        ip,
                        searchString}, callback, asyncState);
        }
        
        /// <remarks/>
        public Customer EndGetCustomer(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetWarehouses", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
        public Warehouse[] GetWarehouses(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip) {
            object[] results = this.Invoke("GetWarehouses", new object[] {
                        id,
                        idSpecified,
                        ip});
            return ((Warehouse[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWarehouses(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWarehouses", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public Warehouse[] EndGetWarehouses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Warehouse[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/ExportDocument", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ExportDocument(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Header header, out bool ExportDocumentResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ExportDocumentResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errorMessage) {
            object[] results = this.Invoke("ExportDocument", new object[] {
                        id,
                        idSpecified,
                        ip,
                        header});
            ExportDocumentResult = ((bool)(results[0]));
            ExportDocumentResultSpecified = ((bool)(results[1]));
            errorMessage = ((string)(results[2]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginExportDocument(int id, bool idSpecified, string ip, Header header, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ExportDocument", new object[] {
                        id,
                        idSpecified,
                        ip,
                        header}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndExportDocument(System.IAsyncResult asyncResult, out bool ExportDocumentResult, out bool ExportDocumentResultSpecified, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            ExportDocumentResult = ((bool)(results[0]));
            ExportDocumentResultSpecified = ((bool)(results[1]));
            errorMessage = ((string)(results[2]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetNow", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetNow(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, out System.DateTime GetNowResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetNowResultSpecified) {
            object[] results = this.Invoke("GetNow", new object[] {
                        id,
                        idSpecified,
                        ip});
            GetNowResult = ((System.DateTime)(results[0]));
            GetNowResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetNow(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetNow", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetNow(System.IAsyncResult asyncResult, out System.DateTime GetNowResult, out bool GetNowResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            GetNowResult = ((System.DateTime)(results[0]));
            GetNowResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetWebServiceVersion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GetWebServiceVersion(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip) {
            object[] results = this.Invoke("GetWebServiceVersion", new object[] {
                        id,
                        idSpecified,
                        ip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebServiceVersion(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebServiceVersion", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetWebServiceVersion(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/ProductCheckAdd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductCheckAdd(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compcode, out bool ProductCheckAddResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ProductCheckAddResultSpecified) {
            object[] results = this.Invoke("ProductCheckAdd", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compcode});
            ProductCheckAddResult = ((bool)(results[0]));
            ProductCheckAddResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductCheckAdd(int id, bool idSpecified, string ip, string code, string compcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductCheckAdd", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndProductCheckAdd(System.IAsyncResult asyncResult, out bool ProductCheckAddResult, out bool ProductCheckAddResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            ProductCheckAddResult = ((bool)(results[0]));
            ProductCheckAddResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/ProductCheckRemove", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ProductCheckRemove(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string compcode, out bool ProductCheckRemoveResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool ProductCheckRemoveResultSpecified) {
            object[] results = this.Invoke("ProductCheckRemove", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compcode});
            ProductCheckRemoveResult = ((bool)(results[0]));
            ProductCheckRemoveResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginProductCheckRemove(int id, bool idSpecified, string ip, string code, string compcode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ProductCheckRemove", new object[] {
                        id,
                        idSpecified,
                        ip,
                        code,
                        compcode}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndProductCheckRemove(System.IAsyncResult asyncResult, out bool ProductCheckRemoveResult, out bool ProductCheckRemoveResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            ProductCheckRemoveResult = ((bool)(results[0]));
            ProductCheckRemoveResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetMobileFilelist", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("ArrayOfstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", NestingLevel=1)]
        public string[][] GetMobileFilelist(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip) {
            object[] results = this.Invoke("GetMobileFilelist", new object[] {
                        id,
                        idSpecified,
                        ip});
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMobileFilelist(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMobileFilelist", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[][] EndGetMobileFilelist(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[][])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/PerformInventoryExport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PerformInventoryExport(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, out bool PerformInventoryExportResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool PerformInventoryExportResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string errorMessage) {
            object[] results = this.Invoke("PerformInventoryExport", new object[] {
                        id,
                        idSpecified,
                        ip});
            PerformInventoryExportResult = ((bool)(results[0]));
            PerformInventoryExportResultSpecified = ((bool)(results[1]));
            errorMessage = ((string)(results[2]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginPerformInventoryExport(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("PerformInventoryExport", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndPerformInventoryExport(System.IAsyncResult asyncResult, out bool PerformInventoryExportResult, out bool PerformInventoryExportResultSpecified, out string errorMessage) {
            object[] results = this.EndInvoke(asyncResult);
            PerformInventoryExportResult = ((bool)(results[0]));
            PerformInventoryExportResultSpecified = ((bool)(results[1]));
            errorMessage = ((string)(results[2]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetMobileConfig", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GetMobileConfig(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, out bool GetMobileConfigResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool GetMobileConfigResultSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] out string fileContent) {
            object[] results = this.Invoke("GetMobileConfig", new object[] {
                        id,
                        idSpecified,
                        ip});
            GetMobileConfigResult = ((bool)(results[0]));
            GetMobileConfigResultSpecified = ((bool)(results[1]));
            fileContent = ((string)(results[2]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetMobileConfig(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetMobileConfig", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndGetMobileConfig(System.IAsyncResult asyncResult, out bool GetMobileConfigResult, out bool GetMobileConfigResultSpecified, out string fileContent) {
            object[] results = this.EndInvoke(asyncResult);
            GetMobileConfigResult = ((bool)(results[0]));
            GetMobileConfigResultSpecified = ((bool)(results[1]));
            fileContent = ((string)(results[2]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetInvLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
        public InvLine[] GetInvLines(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxCode) {
            object[] results = this.Invoke("GetInvLines", new object[] {
                        id,
                        idSpecified,
                        ip,
                        taxCode});
            return ((InvLine[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetInvLines(int id, bool idSpecified, string ip, string taxCode, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetInvLines", new object[] {
                        id,
                        idSpecified,
                        ip,
                        taxCode}, callback, asyncState);
        }
        
        /// <remarks/>
        public InvLine[] EndGetInvLines(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((InvLine[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/CountInvLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CountInvLines(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, out int CountInvLinesResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool CountInvLinesResultSpecified) {
            object[] results = this.Invoke("CountInvLines", new object[] {
                        id,
                        idSpecified,
                        ip});
            CountInvLinesResult = ((int)(results[0]));
            CountInvLinesResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCountInvLines(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CountInvLines", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndCountInvLines(System.IAsyncResult asyncResult, out int CountInvLinesResult, out bool CountInvLinesResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            CountInvLinesResult = ((int)(results[0]));
            CountInvLinesResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/UploadInvLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public InvLine UploadInvLine(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] InvLine line, decimal quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, bool add, [System.Xml.Serialization.XmlIgnoreAttribute()] bool addSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string outputPath) {
            object[] results = this.Invoke("UploadInvLine", new object[] {
                        id,
                        idSpecified,
                        ip,
                        line,
                        quantity,
                        quantitySpecified,
                        add,
                        addSpecified,
                        outputPath});
            return ((InvLine)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadInvLine(int id, bool idSpecified, string ip, InvLine line, decimal quantity, bool quantitySpecified, bool add, bool addSpecified, string outputPath, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadInvLine", new object[] {
                        id,
                        idSpecified,
                        ip,
                        line,
                        quantity,
                        quantitySpecified,
                        add,
                        addSpecified,
                        outputPath}, callback, asyncState);
        }
        
        /// <remarks/>
        public InvLine EndUploadInvLine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((InvLine)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetESLInvLines", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
        public ESLInvLine[] GetESLInvLines(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invNumber) {
            object[] results = this.Invoke("GetESLInvLines", new object[] {
                        id,
                        idSpecified,
                        ip,
                        taxCode,
                        invNumber});
            return ((ESLInvLine[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetESLInvLines(int id, bool idSpecified, string ip, string taxCode, string invNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetESLInvLines", new object[] {
                        id,
                        idSpecified,
                        ip,
                        taxCode,
                        invNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public ESLInvLine[] EndGetESLInvLines(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ESLInvLine[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/UploadESLInvLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ESLInvLine UploadESLInvLine(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ESLInvLine line, decimal quantity, [System.Xml.Serialization.XmlIgnoreAttribute()] bool quantitySpecified, bool add, [System.Xml.Serialization.XmlIgnoreAttribute()] bool addSpecified) {
            object[] results = this.Invoke("UploadESLInvLine", new object[] {
                        id,
                        idSpecified,
                        ip,
                        line,
                        quantity,
                        quantitySpecified,
                        add,
                        addSpecified});
            return ((ESLInvLine)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUploadESLInvLine(int id, bool idSpecified, string ip, ESLInvLine line, decimal quantity, bool quantitySpecified, bool add, bool addSpecified, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UploadESLInvLine", new object[] {
                        id,
                        idSpecified,
                        ip,
                        line,
                        quantity,
                        quantitySpecified,
                        add,
                        addSpecified}, callback, asyncState);
        }
        
        /// <remarks/>
        public ESLInvLine EndUploadESLInvLine(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ESLInvLine)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetPriceCatalogPolicies", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
        public PriceCatalogPolicy[] GetPriceCatalogPolicies(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip) {
            object[] results = this.Invoke("GetPriceCatalogPolicies", new object[] {
                        id,
                        idSpecified,
                        ip});
            return ((PriceCatalogPolicy[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPriceCatalogPolicies(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPriceCatalogPolicies", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public PriceCatalogPolicy[] EndGetPriceCatalogPolicies(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PriceCatalogPolicy[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/UpdateInvLine", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateInvLine(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string ip, out bool UpdateInvLineResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool UpdateInvLineResultSpecified) {
            object[] results = this.Invoke("UpdateInvLine", new object[] {
                        id,
                        idSpecified,
                        ip});
            UpdateInvLineResult = ((bool)(results[0]));
            UpdateInvLineResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateInvLine(int id, bool idSpecified, string ip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateInvLine", new object[] {
                        id,
                        idSpecified,
                        ip}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateInvLine(System.IAsyncResult asyncResult, out bool UpdateInvLineResult, out bool UpdateInvLineResultSpecified) {
            object[] results = this.EndInvoke(asyncResult);
            UpdateInvLineResult = ((bool)(results[0]));
            UpdateInvLineResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IWRMMobileAtStore/GetSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MobileAtStoreSettings GetSettings() {
            object[] results = this.Invoke("GetSettings", new object[0]);
            return ((MobileAtStoreSettings)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSettings(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSettings", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public MobileAtStoreSettings EndGetSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((MobileAtStoreSettings)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.Mobile.AuxilliaryClasses")]
    public enum eDocumentType {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        ORDER,
        
        /// <remarks/>
        EMPTY_2,
        
        /// <remarks/>
        INVOICE,
        
        /// <remarks/>
        EMPTY_4,
        
        /// <remarks/>
        RECEPTION,
        
        /// <remarks/>
        INVENTORY,
        
        /// <remarks/>
        MATCHING,
        
        /// <remarks/>
        PICKING,
        
        /// <remarks/>
        TRANSFER,
        
        /// <remarks/>
        TAG,
        
        /// <remarks/>
        PRICE_CHECK,
        
        /// <remarks/>
        COMPETITION,
        
        /// <remarks/>
        PACKING,
        
        /// <remarks/>
        PACKINGORPICKING,
        
        /// <remarks/>
        ESL_INV,
        
        /// <remarks/>
        INVOICE_SALES,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class Product {
        
        /// <remarks/>
        public decimal AverageMonthSales;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AverageMonthSalesSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Barcode;
        
        /// <remarks/>
        public BarcodeParsingResult BarcodeParsingResult;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarcodeParsingResultSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BasicSupplier;
        
        /// <remarks/>
        public int BasicSupplierColor;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BasicSupplierColorSpecified;
        
        /// <remarks/>
        public decimal CalculatedTotalPrice;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CalculatedTotalPriceSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Product ChainProduct;
        
        /// <remarks/>
        public decimal ChainProductQuantity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChainProductQuantitySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtraCode;
        
        /// <remarks/>
        public bool ExtraCodeIsActive;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraCodeIsActiveSpecified;
        
        /// <remarks/>
        public bool IsActive;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified;
        
        /// <remarks/>
        public bool IsActiveOnSupplier;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveOnSupplierSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MeasurementUnitText;
        
        /// <remarks/>
        public decimal OrderMM;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrderMMSpecified;
        
        /// <remarks/>
        public decimal Points;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointsSpecified;
        
        /// <remarks/>
        public decimal Price;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified;
        
        /// <remarks/>
        public decimal PricePerMeasurementUnit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PricePerMeasurementUnitSpecified;
        
        /// <remarks/>
        public decimal PricePerUnit;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PricePerUnitSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
        public ProductQuantity[] ProductQuantities;
        
        /// <remarks/>
        public decimal Quantity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
        public Offer[] RelatedActions;
        
        /// <remarks/>
        public decimal RequiredQuantity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RequiredQuantitySpecified;
        
        /// <remarks/>
        public decimal RestInvQty;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RestInvQtySpecified;
        
        /// <remarks/>
        public decimal Stock;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StockSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Supplier;
        
        /// <remarks/>
        public bool SupportsDecimalQuantities;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SupportsDecimalQuantitiesSpecified;
        
        /// <remarks/>
        public int VatCat;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VatCatSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WeightedDecodedBarcode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string extrainfo;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.Platform.Enumerations")]
    public enum BarcodeParsingResult {
        
        /// <remarks/>
        NONE,
        
        /// <remarks/>
        ITEM_CODE_QUANTITY,
        
        /// <remarks/>
        ITEM_CODE_VALUE,
        
        /// <remarks/>
        CUSTOMER,
        
        /// <remarks/>
        NON_WEIGHTED_PRODUCT,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
    public partial class ProductQuantity {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtraCode;
        
        /// <remarks/>
        public decimal Quantity;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class MobileAtStoreSettings {
        
        /// <remarks/>
        public int QuantityNumberOfDecimalDigits;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantityNumberOfDecimalDigitsSpecified;
        
        /// <remarks/>
        public int QuantityNumberOfIntegralDigits;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantityNumberOfIntegralDigitsSpecified;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
    public partial class PriceCatalogPolicy {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ID;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ESLInvLine))]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class InvLine {
        
        /// <remarks/>
        public System.DateTime CreatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Descr;
        
        /// <remarks/>
        public int Export;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExportSpecified;
        
        /// <remarks/>
        public string Oid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProdBarcode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProdCode;
        
        /// <remarks/>
        public decimal Qty;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QtySpecified;
        
        /// <remarks/>
        public System.DateTime UpdatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedOnSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string outputPath;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class ESLInvLine : InvLine {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InventoryNumber;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class Line {
        
        /// <remarks/>
        public BarcodeParsingResult BarcodeParsingResult;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BarcodeParsingResultSpecified;
        
        /// <remarks/>
        public int Counter;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CounterSpecified;
        
        /// <remarks/>
        public System.DateTime CreatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified;
        
        /// <remarks/>
        public int Flyer;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlyerSpecified;
        
        /// <remarks/>
        public string Header;
        
        /// <remarks/>
        public string Oid;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProdBarcode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProdCode;
        
        /// <remarks/>
        public decimal Qty1;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Qty1Specified;
        
        /// <remarks/>
        public string Uniqueid;
        
        /// <remarks/>
        public System.DateTime UpdatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedOnSpecified;
        
        /// <remarks/>
        public decimal WeightedBarcodeValue;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WeightedBarcodeValueSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string WeightedDecodedBarcode;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public partial class Header {
        
        /// <remarks/>
        public bool Append;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AppendSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code;
        
        /// <remarks/>
        public System.DateTime CreatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerAFM;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerName;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Line[] Details;
        
        /// <remarks/>
        public System.DateTime DocDate;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocDateSpecified;
        
        /// <remarks/>
        public int DocNumber;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocNumberSpecified;
        
        /// <remarks/>
        public DOC_STATUS DocStatus;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocStatusSpecified;
        
        /// <remarks/>
        public eDocumentType DocType;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocTypeSpecified;
        
        /// <remarks/>
        public bool ForcedOffline;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForcedOfflineSpecified;
        
        /// <remarks/>
        public string Oid;
        
        /// <remarks/>
        public int OutputId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OutputIdSpecified;
        
        /// <remarks/>
        public int TerminalID;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TerminalIDSpecified;
        
        /// <remarks/>
        public System.DateTime UpdatedOn;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdatedOnSpecified;
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.Retail.WebClient.RetailAtStoreModel")]
    public enum DOC_STATUS {
        
        /// <remarks/>
        OPEN,
        
        /// <remarks/>
        CLOSED,
        
        /// <remarks/>
        EXPORTED,
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
    public partial class Warehouse {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompCode;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
    public partial class Customer {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AFM;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name;
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/ITS.MobileAtStore.ObjectModel")]
    public partial class Offer {
        
        /// <remarks/>
        public int AA;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AASpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DescriptionProcessed;
        
        /// <remarks/>
        public decimal DiscountPercent;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountPercentSpecified;
        
        /// <remarks/>
        public decimal FinalPrice;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FinalPriceSpecified;
        
        /// <remarks/>
        public bool IsSingleItemDiscount;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSingleItemDiscountSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LoyaltyText;
        
        /// <remarks/>
        public int OfferId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OfferIdSpecified;
        
        /// <remarks/>
        public int OperationId;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationIdSpecified;
        
        /// <remarks/>
        public bool ValidForMembers;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidForMembersSpecified;
    }
}
